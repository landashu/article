(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{512:function(n,e,s){"use strict";s.r(e);var a=s(41),t=Object(a.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("p",[n._v("MyBatis 的缓存分为一级缓存和二级缓存，缓存情况如下图，单服务架构中（有且仅有只有一个程序提供相同服务），一级缓存开启不会影响业务，只会提高性能。 微服务架构中需要关闭一级缓存，原因：Service1 先查询数据，若之后 Service2 修改了数据，之后 Service1 又再次以同样的查询条件查询数据，因走缓存会出现查处的数据不是最新数据")]),n._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/mybatis/302/img.png",alt:""}})]),n._v(" "),s("h2",{attrs:{id:"一级缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一级缓存"}},[n._v("#")]),n._v(" 一级缓存")]),n._v(" "),s("p",[n._v("一级缓存是基于 "),s("code",[n._v("SQLSession")]),n._v("  级别的，在同一个 "),s("code",[n._v("Session")]),n._v("  的相同查询语句会才会从缓存中查询，所谓相同包括 SQL 相同，条件相同等，那么我们看下在源码中具体是怎么维护和使用这个缓存的。")]),n._v(" "),s("h3",{attrs:{id:"解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析"}},[n._v("#")]),n._v(" 解析")]),n._v(" "),s("p",[n._v("描述一级缓存只需要在  "),s("code",[n._v("<configuration>")]),n._v("  标签中描述即可，而一级缓存的  "),s("code",[n._v("value")]),n._v("  值有  "),s("code",[n._v("SESSION")]),n._v("  和  "),s("code",[n._v("STATEMENT")]),n._v("  两种，如果设置为  "),s("code",[n._v("STATEMENT")]),n._v("  基本可以算是关闭一级缓存，一级缓存是 "),s("code",[n._v("MyBatis")]),n._v("  提供的默认缓存，所以不会在代码中看到判断一级缓存的条件")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('<configuration>\n    <settings>\n        \x3c!--缓存级别：SESSION/STATEMENT--\x3e\n        <setting name="localCacheScope" value="SESSION"/>\n    </settings>\n</configuration>\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br")])]),s("p",[n._v("解析核心代码会得到 "),s("code",[n._v("localCacheScope的值")]),n._v(" ，维护到  "),s("code",[n._v("configuration")]),n._v("  全局配置中")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('private void settingsElement(Element context) {\n    if (context == null) return;\n    List<Element> elements = context.elements();\n    Properties props = new Properties();\n    for (Element element : elements) {\n        props.setProperty(element.attributeValue("name"), element.attributeValue("value"));\n    }\n    // 是否启用二级缓存\n    configuration.setCacheEnabled(booleanValueOf(props.getProperty("cacheEnabled"), true));\n    // 一级缓存的配置\n    configuration.setLocalCacheScope(LocalCacheScope.valueOf(props.getProperty("localCacheScope")));\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br")])]),s("h3",{attrs:{id:"准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[n._v("#")]),n._v(" 准备")]),n._v(" "),s("p",[n._v("准备阶段主要是在  "),s("code",[n._v("openSession")]),n._v("  方法，他会在执行器里面去直接  "),s("code",[n._v("new PerpetualCache")]),n._v("  永久缓存，执行器就拥有了这个缓存对象")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('// 打开一个 session\n@Override\npublic SqlSession openSession() {\n    Transaction tx = null;\n    try {\n        final Environment environment = configuration.getEnvironment();\n        TransactionFactory transactionFactory = environment.getTransactionFactory();\n        tx = transactionFactory.newTransaction(configuration.getEnvironment().getDataSource(), TransactionIsolationLevel.READ_COMMITTED, false);\n        // 创建执行器\n        final Executor executor = configuration.newExecutor(tx);\n        // 创建DefaultSqlSession\n        return new DefaultSqlSession(configuration, executor);\n    } catch (Exception e) {\n        try {\n            assert tx != null;\n            tx.close();\n        } catch (SQLException ignore) {\n        }\n        throw new RuntimeException("Error opening session.  Cause: " + e);\n    }\n}\n\n// 创建执行器\npublic Executor newExecutor(Transaction transaction) {\n    Executor executor = new SimpleExecutor(this, transaction);\n    // 配置开启二级缓存，创建 CachingExecutor(默认就是有缓存)装饰者模式，\n    if (cacheEnabled) {\n        executor = new CachingExecutor(executor);\n    }\n    return executor;\n}\n\n// SimpleExecutor 简单执行器的构造方法\npublic class SimpleExecutor extends BaseExecutor {\n    public SimpleExecutor(Configuration configuration, Transaction transaction) {\n        super(configuration, transaction);\n    }\n}\n\n// 基础执行器的构造方法\nprotected BaseExecutor(Configuration configuration, Transaction transaction) {\n    this.configuration = configuration;\n    this.transaction = transaction;\n    this.wrapper = this;\n    // new 一个永久缓存\n    this.localCache = new PerpetualCache("LocalCache");\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br")])]),s("p",[s("code",[n._v("PerpetualCache")]),n._v("  继承了  "),s("code",[n._v("Cache")]),n._v("  ，并实现了基本的对缓存的操作")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("public class PerpetualCache implements Cache {\n    private String id;\n    // 使用HashMap存放一级缓存数据，session 生命周期较短，正常情况下数据不会一直在缓存存放\n    private Map<Object, Object> cache = new HashMap<>();\n    public PerpetualCache(String id) {\n        this.id = id;\n    }\n    @Override\n    public String getId() {\n        return id;\n    }\n    @Override\n    public void putObject(Object key, Object value) {\n        cache.put(key, value);\n    }\n    @Override\n    public Object getObject(Object key) {\n        return cache.get(key);\n    }\n    @Override\n    public Object removeObject(Object key) {\n        return cache.remove(key);\n    }\n    @Override\n    public void clear() {\n        cache.clear();\n    }\n    @Override\n    public int getSize() {\n        return cache.size();\n    }\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br")])]),s("h3",{attrs:{id:"执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行"}},[n._v("#")]),n._v(" 执行")]),n._v(" "),s("p",[n._v("在准备阶段已经得到了执行器，并在执行器里面得到了 "),s("code",[n._v("PerpetualCache")]),n._v("  缓存，只需要知道客户使用的是查询还是修改等操作后，执行执行器里面对应的 "),s("code",[n._v("query or update")]),n._v("  方法即可")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('public abstract class BaseExecutor implements Executor {\n\n    private org.slf4j.Logger logger = LoggerFactory.getLogger(BaseExecutor.class);\n\n    protected Configuration configuration;\n    protected Transaction transaction;\n    protected Executor wrapper;\n\n    // 本地缓存\n    protected PerpetualCache localCache;\n\n    private boolean closed;\n    // 查询堆栈\n    protected int queryStack = 0;\n\n    protected BaseExecutor(Configuration configuration, Transaction transaction) {\n        this.configuration = configuration;\n        this.transaction = transaction;\n        this.wrapper = this;\n        this.localCache = new PerpetualCache("LocalCache");\n    }\n\n    @Override\n    public int update(MappedStatement ms, Object parameter) throws SQLException {\n        if (closed) {\n            throw new RuntimeException("Executor was closed.");\n        }\n        clearLocalCache();\n        return doUpdate(ms, parameter);\n    }\n\n    @Override\n    public <E> List<E> query(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler) throws SQLException {\n        // 1. 获取绑定SQL\n        BoundSql boundSql = ms.getBoundSql(parameter);\n        // 2. 创建缓存Key\n        CacheKey key = createCacheKey(ms, parameter, rowBounds, boundSql);\n        return query(ms, parameter, rowBounds, resultHandler, key, boundSql);\n    }\n\n    @Override\n    public <E> List<E> query(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, CacheKey key, BoundSql boundSql) throws SQLException {\n        if (closed) {\n            throw new RuntimeException("Executor was closed.");\n        }\n        // 清理局部缓存，查询堆栈为0则清理。queryStack 避免递归调用清理\n        if (queryStack == 0 && ms.isFlushCacheRequired()) {\n            clearLocalCache();\n        }\n        List<E> list;\n        try {\n            queryStack++;\n            // 根据cacheKey从localCache中查询数据\n            list = resultHandler == null ? (List<E>) localCache.getObject(key) : null;\n            if (list == null) {\n                list = queryFromDatabase(ms, parameter, rowBounds, resultHandler, key, boundSql);\n            }\n        } finally {\n            queryStack--;\n        }\n        if (queryStack == 0) {\n            if (configuration.getLocalCacheScope() == LocalCacheScope.STATEMENT) {\n                clearLocalCache();\n            }\n        }\n        return list;\n    }\n\n    private <E> List<E> queryFromDatabase(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, CacheKey key, BoundSql boundSql) throws SQLException {\n        List<E> list;\n        localCache.putObject(key, ExecutionPlaceholder.EXECUTION_PLACEHOLDER);\n        try {\n            list = doQuery(ms, parameter, rowBounds, resultHandler, boundSql);\n        } finally {\n            localCache.removeObject(key);\n        }\n        // 存入缓存\n        localCache.putObject(key, list);\n        return list;\n    }\n\n    protected abstract int doUpdate(MappedStatement ms, Object parameter) throws SQLException;\n\n    protected abstract <E> List<E> doQuery(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, BoundSql boundSql) throws SQLException;\n\n    @Override\n    public Transaction getTransaction() {\n        if (closed) {\n            throw new RuntimeException("Executor was closed.");\n        }\n        return transaction;\n    }\n\n    @Override\n    public void commit(boolean required) throws SQLException {\n        if (closed) {\n            throw new RuntimeException("Cannot commit, transaction is already closed");\n        }\n        clearLocalCache();\n        if (required) {\n            transaction.commit();\n        }\n    }\n\n    @Override\n    public void rollback(boolean required) throws SQLException {\n        if (!closed) {\n            try {\n                clearLocalCache();\n            } finally {\n                if (required) {\n                    transaction.rollback();\n                }\n            }\n        }\n    }\n\n    @Override\n    public void clearLocalCache() {\n        if (!closed) {\n            localCache.clear();\n        }\n    }\n\n    @Override\n    public CacheKey createCacheKey(MappedStatement ms, Object parameterObject, RowBounds rowBounds, BoundSql boundSql) {\n        if (closed) {\n            throw new RuntimeException("Executor was closed.");\n        }\n        CacheKey cacheKey = new CacheKey();\n        cacheKey.update(ms.getId());\n        cacheKey.update(rowBounds.getOffset());\n        cacheKey.update(rowBounds.getLimit());\n        cacheKey.update(boundSql.getSql());\n        List<ParameterMapping> parameterMappings = boundSql.getParameterMappings();\n        TypeHandlerRegistry typeHandlerRegistry = ms.getConfiguration().getTypeHandlerRegistry();\n        for (ParameterMapping parameterMapping : parameterMappings) {\n            Object value;\n            String propertyName = parameterMapping.getProperty();\n            if (boundSql.hasAdditionalParameter(propertyName)) {\n                value = boundSql.getAdditionalParameter(propertyName);\n            } else if (parameterObject == null) {\n                value = null;\n            } else if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n                value = parameterObject;\n            } else {\n                MetaObject metaObject = configuration.newMetaObject(parameterObject);\n                value = metaObject.getValue(propertyName);\n            }\n            cacheKey.update(value);\n        }\n        if (configuration.getEnvironment() != null) {\n            cacheKey.update(configuration.getEnvironment().getId());\n        }\n        return cacheKey;\n    }\n\n    @Override\n    public void setExecutorWrapper(Executor executor) {\n        this.wrapper = wrapper;\n    }\n\n    @Override\n    public void close(boolean forceRollback) {\n        try {\n            try {\n                rollback(forceRollback);\n            } finally {\n                transaction.close();\n            }\n        } catch (SQLException e) {\n            logger.warn("Unexpected exception on closing transaction.  Cause: " + e);\n        } finally {\n            transaction = null;\n            localCache = null;\n            closed = true;\n        }\n    }\n\n    protected void closeStatement(Statement statement) {\n        if (statement != null) {\n            try {\n                statement.close();\n            } catch (SQLException ignore) {\n            }\n        }\n    }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br"),s("span",{staticClass:"line-number"},[n._v("67")]),s("br"),s("span",{staticClass:"line-number"},[n._v("68")]),s("br"),s("span",{staticClass:"line-number"},[n._v("69")]),s("br"),s("span",{staticClass:"line-number"},[n._v("70")]),s("br"),s("span",{staticClass:"line-number"},[n._v("71")]),s("br"),s("span",{staticClass:"line-number"},[n._v("72")]),s("br"),s("span",{staticClass:"line-number"},[n._v("73")]),s("br"),s("span",{staticClass:"line-number"},[n._v("74")]),s("br"),s("span",{staticClass:"line-number"},[n._v("75")]),s("br"),s("span",{staticClass:"line-number"},[n._v("76")]),s("br"),s("span",{staticClass:"line-number"},[n._v("77")]),s("br"),s("span",{staticClass:"line-number"},[n._v("78")]),s("br"),s("span",{staticClass:"line-number"},[n._v("79")]),s("br"),s("span",{staticClass:"line-number"},[n._v("80")]),s("br"),s("span",{staticClass:"line-number"},[n._v("81")]),s("br"),s("span",{staticClass:"line-number"},[n._v("82")]),s("br"),s("span",{staticClass:"line-number"},[n._v("83")]),s("br"),s("span",{staticClass:"line-number"},[n._v("84")]),s("br"),s("span",{staticClass:"line-number"},[n._v("85")]),s("br"),s("span",{staticClass:"line-number"},[n._v("86")]),s("br"),s("span",{staticClass:"line-number"},[n._v("87")]),s("br"),s("span",{staticClass:"line-number"},[n._v("88")]),s("br"),s("span",{staticClass:"line-number"},[n._v("89")]),s("br"),s("span",{staticClass:"line-number"},[n._v("90")]),s("br"),s("span",{staticClass:"line-number"},[n._v("91")]),s("br"),s("span",{staticClass:"line-number"},[n._v("92")]),s("br"),s("span",{staticClass:"line-number"},[n._v("93")]),s("br"),s("span",{staticClass:"line-number"},[n._v("94")]),s("br"),s("span",{staticClass:"line-number"},[n._v("95")]),s("br"),s("span",{staticClass:"line-number"},[n._v("96")]),s("br"),s("span",{staticClass:"line-number"},[n._v("97")]),s("br"),s("span",{staticClass:"line-number"},[n._v("98")]),s("br"),s("span",{staticClass:"line-number"},[n._v("99")]),s("br"),s("span",{staticClass:"line-number"},[n._v("100")]),s("br"),s("span",{staticClass:"line-number"},[n._v("101")]),s("br"),s("span",{staticClass:"line-number"},[n._v("102")]),s("br"),s("span",{staticClass:"line-number"},[n._v("103")]),s("br"),s("span",{staticClass:"line-number"},[n._v("104")]),s("br"),s("span",{staticClass:"line-number"},[n._v("105")]),s("br"),s("span",{staticClass:"line-number"},[n._v("106")]),s("br"),s("span",{staticClass:"line-number"},[n._v("107")]),s("br"),s("span",{staticClass:"line-number"},[n._v("108")]),s("br"),s("span",{staticClass:"line-number"},[n._v("109")]),s("br"),s("span",{staticClass:"line-number"},[n._v("110")]),s("br"),s("span",{staticClass:"line-number"},[n._v("111")]),s("br"),s("span",{staticClass:"line-number"},[n._v("112")]),s("br"),s("span",{staticClass:"line-number"},[n._v("113")]),s("br"),s("span",{staticClass:"line-number"},[n._v("114")]),s("br"),s("span",{staticClass:"line-number"},[n._v("115")]),s("br"),s("span",{staticClass:"line-number"},[n._v("116")]),s("br"),s("span",{staticClass:"line-number"},[n._v("117")]),s("br"),s("span",{staticClass:"line-number"},[n._v("118")]),s("br"),s("span",{staticClass:"line-number"},[n._v("119")]),s("br"),s("span",{staticClass:"line-number"},[n._v("120")]),s("br"),s("span",{staticClass:"line-number"},[n._v("121")]),s("br"),s("span",{staticClass:"line-number"},[n._v("122")]),s("br"),s("span",{staticClass:"line-number"},[n._v("123")]),s("br"),s("span",{staticClass:"line-number"},[n._v("124")]),s("br"),s("span",{staticClass:"line-number"},[n._v("125")]),s("br"),s("span",{staticClass:"line-number"},[n._v("126")]),s("br"),s("span",{staticClass:"line-number"},[n._v("127")]),s("br"),s("span",{staticClass:"line-number"},[n._v("128")]),s("br"),s("span",{staticClass:"line-number"},[n._v("129")]),s("br"),s("span",{staticClass:"line-number"},[n._v("130")]),s("br"),s("span",{staticClass:"line-number"},[n._v("131")]),s("br"),s("span",{staticClass:"line-number"},[n._v("132")]),s("br"),s("span",{staticClass:"line-number"},[n._v("133")]),s("br"),s("span",{staticClass:"line-number"},[n._v("134")]),s("br"),s("span",{staticClass:"line-number"},[n._v("135")]),s("br"),s("span",{staticClass:"line-number"},[n._v("136")]),s("br"),s("span",{staticClass:"line-number"},[n._v("137")]),s("br"),s("span",{staticClass:"line-number"},[n._v("138")]),s("br"),s("span",{staticClass:"line-number"},[n._v("139")]),s("br"),s("span",{staticClass:"line-number"},[n._v("140")]),s("br"),s("span",{staticClass:"line-number"},[n._v("141")]),s("br"),s("span",{staticClass:"line-number"},[n._v("142")]),s("br"),s("span",{staticClass:"line-number"},[n._v("143")]),s("br"),s("span",{staticClass:"line-number"},[n._v("144")]),s("br"),s("span",{staticClass:"line-number"},[n._v("145")]),s("br"),s("span",{staticClass:"line-number"},[n._v("146")]),s("br"),s("span",{staticClass:"line-number"},[n._v("147")]),s("br"),s("span",{staticClass:"line-number"},[n._v("148")]),s("br"),s("span",{staticClass:"line-number"},[n._v("149")]),s("br"),s("span",{staticClass:"line-number"},[n._v("150")]),s("br"),s("span",{staticClass:"line-number"},[n._v("151")]),s("br"),s("span",{staticClass:"line-number"},[n._v("152")]),s("br"),s("span",{staticClass:"line-number"},[n._v("153")]),s("br"),s("span",{staticClass:"line-number"},[n._v("154")]),s("br"),s("span",{staticClass:"line-number"},[n._v("155")]),s("br"),s("span",{staticClass:"line-number"},[n._v("156")]),s("br"),s("span",{staticClass:"line-number"},[n._v("157")]),s("br"),s("span",{staticClass:"line-number"},[n._v("158")]),s("br"),s("span",{staticClass:"line-number"},[n._v("159")]),s("br"),s("span",{staticClass:"line-number"},[n._v("160")]),s("br"),s("span",{staticClass:"line-number"},[n._v("161")]),s("br"),s("span",{staticClass:"line-number"},[n._v("162")]),s("br"),s("span",{staticClass:"line-number"},[n._v("163")]),s("br"),s("span",{staticClass:"line-number"},[n._v("164")]),s("br"),s("span",{staticClass:"line-number"},[n._v("165")]),s("br"),s("span",{staticClass:"line-number"},[n._v("166")]),s("br"),s("span",{staticClass:"line-number"},[n._v("167")]),s("br"),s("span",{staticClass:"line-number"},[n._v("168")]),s("br"),s("span",{staticClass:"line-number"},[n._v("169")]),s("br"),s("span",{staticClass:"line-number"},[n._v("170")]),s("br"),s("span",{staticClass:"line-number"},[n._v("171")]),s("br"),s("span",{staticClass:"line-number"},[n._v("172")]),s("br"),s("span",{staticClass:"line-number"},[n._v("173")]),s("br"),s("span",{staticClass:"line-number"},[n._v("174")]),s("br"),s("span",{staticClass:"line-number"},[n._v("175")]),s("br"),s("span",{staticClass:"line-number"},[n._v("176")]),s("br"),s("span",{staticClass:"line-number"},[n._v("177")]),s("br"),s("span",{staticClass:"line-number"},[n._v("178")]),s("br"),s("span",{staticClass:"line-number"},[n._v("179")]),s("br"),s("span",{staticClass:"line-number"},[n._v("180")]),s("br"),s("span",{staticClass:"line-number"},[n._v("181")]),s("br"),s("span",{staticClass:"line-number"},[n._v("182")]),s("br"),s("span",{staticClass:"line-number"},[n._v("183")]),s("br"),s("span",{staticClass:"line-number"},[n._v("184")]),s("br"),s("span",{staticClass:"line-number"},[n._v("185")]),s("br"),s("span",{staticClass:"line-number"},[n._v("186")]),s("br"),s("span",{staticClass:"line-number"},[n._v("187")]),s("br"),s("span",{staticClass:"line-number"},[n._v("188")]),s("br")])]),s("p",[n._v("可以看到 执行器里面维护了 "),s("code",[n._v("query update commit")]),n._v("  等方法，在执行查询的时候会先生成  "),s("code",[n._v("CacheKey")]),n._v(" ，会按照  "),s("code",[n._v("namespace.id")]),n._v("  +  "),s("code",[n._v("分页offset")]),n._v(" + "),s("code",[n._v("分页limit")]),n._v(" + "),s("code",[n._v("执行的SQL语句")]),n._v("  + "),s("code",[n._v("查询条件的值")]),n._v("  + "),s("code",[n._v("环境ID")]),n._v("  生成唯一的 key，然后做为查询缓存的 key，查询结果做为 value，如果同一各 "),s("code",[n._v("SQLSession")]),n._v("  执行相同语句和条件以及分页等，就会从缓存中命中并返回结果。缓存的清除，就是当该 "),s("code",[n._v("SQLSession")]),n._v("  执行  "),s("code",[n._v("update，commit，close，rollback")]),n._v("  时该 "),s("code",[n._v("SQLSession")]),n._v("  就清除缓存。")]),n._v(" "),s("p",[n._v("在 SQL 语句中也可以设置清除缓存，只需要在  "),s("code",[n._v("<select>、<insert> 和 <update>")]),n._v("  等  "),s("code",[n._v("SQL")]),n._v("  标签中设置  "),s("code",[n._v('flushCache="true"')]),n._v("  属性会强制清空本地缓存，使得下次查询时重新从数据库中获取数据。适用于一级缓存和二级缓存")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('<select id="selectById" resultType="com.example.User" flushCache="true">\n  select * from user where id = #{id}\n</select>\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br")])]),s("h2",{attrs:{id:"二级缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二级缓存"}},[n._v("#")]),n._v(" 二级缓存")]),n._v(" "),s("p",[n._v("二级缓存是为 "),s("code",[n._v("Namespace 也叫 mapper")]),n._v("  级别的缓存，是跨 "),s("code",[n._v("SQLSession")]),n._v("  的，他会在原有的执行器上封装一个 "),s("code",[n._v("CachingExecutor")]),n._v(" ，来管理缓存， "),s("code",[n._v("CachingExecutor")]),n._v("  使用了装饰器模式来装饰基础的  "),s("code",[n._v("Executor")]),n._v("  执行器。")]),n._v(" "),s("h3",{attrs:{id:"解析-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析-2"}},[n._v("#")]),n._v(" 解析")]),n._v(" "),s("p",[n._v("在二级缓存中的配置方式具体如下")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('\x3c!-- 必须先开启缓存 --\x3e\n<configuration>\n    <settings>\n        \x3c!--  true/false 二级缓存是否使用 --\x3e\n        <setting name="cacheEnabled" value="true"/>\n    </settings>\n</configuration>\n\n\x3c!-- 指定在某个mapper中使用 --\x3e\n<mapper namespace="com.example.MyMapper">\n    \x3c!-- 设置该mapper的二级缓存 --\x3e\n    <cache eviction="LRU" flushInterval="100000" readOnly="true" size="1024"/>\n    \x3c!-- useCache：表示是否使用二级缓存，如果设置为 true，则会使用二级缓存。对于 select 元素，默认值为 true。 --\x3e\n    \x3c!-- useCache 属性只能控制是否使用二级缓存，它不能关闭一级缓存。一级缓存是 MyBatis 的默认行为，它总是开启的，无法关闭。 --\x3e\n    <select id="queryActivityById" parameterType="cn.bugstack.mybatis.test.po.Activity" flushCache="false" useCache="true">\n        SELECT activity_id, activity_name, activity_desc, create_time, update_time\n        FROM activity\n        <trim prefix="where" prefixOverrides="AND | OR" suffixOverrides="and">\n            <if test="null != activityId">\n                activity_id = #{activityId}\n            </if>\n        </trim>\n    </select>\n</mapper>\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br")])]),s("p",[n._v("其中  "),s("code",[n._v("<cache >")]),n._v("  标签有多个属性，这里一一介绍一下：")]),n._v(" "),s("ul",[s("li",[s("strong",[n._v("type")]),n._v("：可以指定自定义缓存，但是该类必须实现，而且是全类名")]),n._v(" "),s("li",[s("strong",[n._v("eviction")]),n._v("：缓存回收策略，默认为 LRU（Least Recently Used），策略介绍如下："),s("br"),n._v("\nLRU：按照访问时间排序，最近未使用的数据优先清除。"),s("br"),n._v("\nFIFO：按照插入时间排序，先插入的数据先清除。"),s("br"),n._v("\nSOFT：基于垃圾回收算法，当系统内存不足时，会优先清理不常用的、占用内存较多的数据。"),s("br"),n._v("\nWEAK：弱引用机制，当 JVM 进行垃圾回收时，如果判断一个对象只被弱引用指向，则会将其回收。")]),n._v(" "),s("li",[s("strong",[n._v("flushInterval")]),n._v("：刷新间隔时间，表示多长时间刷新一次缓存，单位为毫秒，默认不刷新。")]),n._v(" "),s("li",[s("strong",[n._v("size")]),n._v("：缓存的大小，表示最多可以缓存多少个对象。")]),n._v(" "),s("li",[s("strong",[n._v("readOnly")]),n._v("：是否只读，默认为 false，表示启用缓存更新机制。")]),n._v(" "),s("li",[s("strong",[n._v("blocking")]),n._v("：是否启用阻塞，默认为 false，表示不启用。")])]),n._v(" "),s("blockquote",[s("p",[n._v("flushInterval 默认情况下，MyBatis 采用基于 PerpetualCache (永久缓存) 的缓存实现方式，即缓存会一直保存在内存中，直到会话关闭时才被清除。而当我们使用基于 Ehcache 的缓存实现时，可以通过设置 flushInterval 属性控制缓存的刷新时间，即定时将缓存中的数据写入到磁盘或持久化存储中，以避免缓存过期、失效或内存溢出等问题。")])]),n._v(" "),s("p",[n._v("当 Mybaits 启动后会读到二级缓存的配置，先会进行 "),s("code",[n._v("<cache>")]),n._v("  基础的解析，得到 XML 里面的属性值，其次用值信息组成一个  "),s("code",[n._v("Cache")]),n._v("  对象，并把这个  "),s("code",[n._v("Cache")]),n._v("  对象维护到全局配置 "),s("code",[n._v("Configuration")]),n._v("  中，该全局配置里面是维护一个 Map 结构的容器")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('// 开始解析\nprivate void cacheElement(Element context) {\n    if (context == null) return;\n    // 基础配置信息，默认是永恒缓存\n    String type = context.attributeValue("type", "PERPETUAL");\n    Class<? extends Cache> typeClass = typeAliasRegistry.resolveAlias(type);\n    // 缓存队列 FIFO\n    String eviction = context.attributeValue("eviction", "FIFO");\n    Class<? extends Cache> evictionClass = typeAliasRegistry.resolveAlias(eviction);\n    Long flushInterval = Long.valueOf(context.attributeValue("flushInterval"));\n    Integer size = Integer.valueOf(context.attributeValue("size"));\n    boolean readWrite = !Boolean.parseBoolean(context.attributeValue("readOnly", "false"));\n    boolean blocking = !Boolean.parseBoolean(context.attributeValue("blocking", "false"));\n\n    // 解析额外属性信息；<property name="cacheFile" value="/tmp/xxx-cache.tmp"/>\n    List<Element> elements = context.elements();\n    Properties props = new Properties();\n    for (Element element : elements) {\n        props.setProperty(element.attributeValue("name"), element.attributeValue("value"));\n    }\n    // 构建缓存\n    builderAssistant.useNewCache(typeClass, evictionClass, flushInterval, size, readWrite, blocking, props);\n}\n\n// 构建Cache\npublic Cache useNewCache(Class<? extends Cache> typeClass,\n                        Class<? extends Cache> evictionClass,\n                        Long flushInterval,\n                        Integer size,\n                        boolean readWrite,\n                        boolean blocking,\n                        Properties props) {\n    // 判断为null，则用默认值\n    typeClass = valueOrDefault(typeClass, PerpetualCache.class);\n    evictionClass = valueOrDefault(evictionClass, FifoCache.class);\n\n    // 建造者模式构建 Cache [currentNamespace=cn.bugstack.mybatis.test.dao.IActivityDao]\n    Cache cache = new CacheBuilder(currentNamespace)\n            .implementation(typeClass)\n            .addDecorator(evictionClass)\n            .clearInterval(flushInterval)\n            .size(size)\n            .readWrite(readWrite)\n            .blocking(blocking)\n            .properties(props)\n            .build();\n\n    // 添加缓存\n    configuration.addCache(cache);\n    // 给自己维护一个 cache 以便后续 MappedStatement 用到\n    currentCache = cache;\n    return cache;\n}\n\n// 添加到 configuration全局配置维护的 caches中\npublic class Configuration {\n    // 缓存,存在Map里\n    protected final Map<String, Cache> caches = new HashMap<>();\n    public void addCache(Cache cache) {\n        caches.put(cache.getId(), cache);\n    }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br")])]),s("p",[n._v("缓存解析过了，但是最主要的还是  "),s("code",[n._v("<select>")]),n._v("  标签着一些，标签上面描述了具体的缓存是否使用，缓存是否清除，所以还需要解析标签上的缓存信息，主要是  "),s("code",[n._v("flushCache")]),n._v("  和  "),s("code",[n._v("useCache")]),n._v("  这两个属性")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('// 解析操作\npublic void parseStatementNode() {\n    String id = element.attributeValue("id");\n    // 参数类型\n    String parameterType = element.attributeValue("parameterType");\n    Class<?> parameterTypeClass = resolveAlias(parameterType);\n    // 外部应用 resultMap\n    String resultMap = element.attributeValue("resultMap");\n    // 结果类型\n    String resultType = element.attributeValue("resultType");\n    Class<?> resultTypeClass = resolveAlias(resultType);\n    // 获取命令类型(select|insert|update|delete)\n    String nodeName = element.getName();\n    SqlCommandType sqlCommandType = SqlCommandType.valueOf(nodeName.toUpperCase(Locale.ENGLISH));\n\n    boolean isSelect = sqlCommandType == SqlCommandType.SELECT;\n    boolean flushCache = Boolean.parseBoolean(element.attributeValue("flushCache", String.valueOf(!isSelect)));\n    boolean useCache = Boolean.parseBoolean(element.attributeValue("useCache", String.valueOf(isSelect)));\n\n    // 获取默认语言驱动器\n    Class<?> langClass = configuration.getLanguageRegistry().getDefaultDriverClass();\n    LanguageDriver langDriver = configuration.getLanguageRegistry().getDriver(langClass);\n\n    // 解析<selectKey> step-14 新增\n    processSelectKeyNodes(id, parameterTypeClass, langDriver);\n\n    // 解析成SqlSource，DynamicSqlSource/RawSqlSource\n    SqlSource sqlSource = langDriver.createSqlSource(configuration, element, parameterTypeClass);\n\n    // 属性标记【仅对 insert 有用】, MyBatis 会通过 getGeneratedKeys 或者通过 insert 语句的 selectKey 子元素设置它的值 step-14 新增\n    String keyProperty = element.attributeValue("keyProperty");\n\n    KeyGenerator keyGenerator = null;\n    String keyStatementId = id + SelectKeyGenerator.SELECT_KEY_SUFFIX;\n    keyStatementId = builderAssistant.applyCurrentNamespace(keyStatementId, true);\n\n    if (configuration.hasKeyGenerator(keyStatementId)) {\n        keyGenerator = configuration.getKeyGenerator(keyStatementId);\n    } else {\n        keyGenerator = configuration.isUseGeneratedKeys() && SqlCommandType.INSERT.equals(sqlCommandType) ? new Jdbc3KeyGenerator() : new NoKeyGenerator();\n    }\n    // 调用助手类\n    builderAssistant.addMappedStatement(id,\n            sqlSource,\n            sqlCommandType,\n            parameterTypeClass,\n            resultMap,\n            resultTypeClass,\n            flushCache,\n            useCache,\n            keyGenerator,\n            keyProperty,\n            langDriver);\n}\n\n// 把信息添加到 MappedStatement对象\npublic MappedStatement addMappedStatement(\n        String id,\n        SqlSource sqlSource,\n        SqlCommandType sqlCommandType,\n        Class<?> parameterType,\n        String resultMap,\n        Class<?> resultType,\n        boolean flushCache,\n        boolean useCache,\n        KeyGenerator keyGenerator,\n        String keyProperty,\n        LanguageDriver lang\n) {\n    // 给id加上namespace前缀：cn.bugstack.mybatis.test.dao.IUserDao.queryUserInfoById\n    id = applyCurrentNamespace(id, false);\n    //是否是select语句\n    boolean isSelect = sqlCommandType == SqlCommandType.SELECT;\n\n    MappedStatement.Builder statementBuilder = new MappedStatement.Builder(configuration, id, sqlCommandType, sqlSource, resultType);\n    statementBuilder.resource(resource);\n    statementBuilder.keyGenerator(keyGenerator);\n    statementBuilder.keyProperty(keyProperty);\n\n    // 结果映射，给 MappedStatement#resultMaps\n    setStatementResultMap(resultMap, resultType, statementBuilder);\n    // 维护缓存信息\n    setStatementCache(isSelect, flushCache, useCache, currentCache, statementBuilder);\n    MappedStatement statement = statementBuilder.build();\n    // 映射语句信息，建造完存放到配置项中\n    configuration.addMappedStatement(statement);\n    return statement;\n}\n\n// 给Statement添加缓存信息\nprivate void setStatementCache(\n        boolean isSelect,\n        boolean flushCache,\n        boolean useCache,\n        Cache cache,\n        MappedStatement.Builder statementBuilder) {\n    flushCache = valueOrDefault(flushCache, !isSelect);\n    useCache = valueOrDefault(useCache, isSelect);\n    statementBuilder.flushCacheRequired(flushCache);\n    statementBuilder.useCache(useCache);\n    statementBuilder.cache(cache);\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br"),s("span",{staticClass:"line-number"},[n._v("67")]),s("br"),s("span",{staticClass:"line-number"},[n._v("68")]),s("br"),s("span",{staticClass:"line-number"},[n._v("69")]),s("br"),s("span",{staticClass:"line-number"},[n._v("70")]),s("br"),s("span",{staticClass:"line-number"},[n._v("71")]),s("br"),s("span",{staticClass:"line-number"},[n._v("72")]),s("br"),s("span",{staticClass:"line-number"},[n._v("73")]),s("br"),s("span",{staticClass:"line-number"},[n._v("74")]),s("br"),s("span",{staticClass:"line-number"},[n._v("75")]),s("br"),s("span",{staticClass:"line-number"},[n._v("76")]),s("br"),s("span",{staticClass:"line-number"},[n._v("77")]),s("br"),s("span",{staticClass:"line-number"},[n._v("78")]),s("br"),s("span",{staticClass:"line-number"},[n._v("79")]),s("br"),s("span",{staticClass:"line-number"},[n._v("80")]),s("br"),s("span",{staticClass:"line-number"},[n._v("81")]),s("br"),s("span",{staticClass:"line-number"},[n._v("82")]),s("br"),s("span",{staticClass:"line-number"},[n._v("83")]),s("br"),s("span",{staticClass:"line-number"},[n._v("84")]),s("br"),s("span",{staticClass:"line-number"},[n._v("85")]),s("br"),s("span",{staticClass:"line-number"},[n._v("86")]),s("br"),s("span",{staticClass:"line-number"},[n._v("87")]),s("br"),s("span",{staticClass:"line-number"},[n._v("88")]),s("br"),s("span",{staticClass:"line-number"},[n._v("89")]),s("br"),s("span",{staticClass:"line-number"},[n._v("90")]),s("br"),s("span",{staticClass:"line-number"},[n._v("91")]),s("br"),s("span",{staticClass:"line-number"},[n._v("92")]),s("br"),s("span",{staticClass:"line-number"},[n._v("93")]),s("br"),s("span",{staticClass:"line-number"},[n._v("94")]),s("br"),s("span",{staticClass:"line-number"},[n._v("95")]),s("br"),s("span",{staticClass:"line-number"},[n._v("96")]),s("br"),s("span",{staticClass:"line-number"},[n._v("97")]),s("br"),s("span",{staticClass:"line-number"},[n._v("98")]),s("br"),s("span",{staticClass:"line-number"},[n._v("99")]),s("br"),s("span",{staticClass:"line-number"},[n._v("100")]),s("br"),s("span",{staticClass:"line-number"},[n._v("101")]),s("br"),s("span",{staticClass:"line-number"},[n._v("102")]),s("br")])]),s("p",[n._v("在具体的  "),s("code",[n._v("addMappedStatement")]),n._v("  的时候，可以看到会得到一个 "),s("code",[n._v("MappedStatement")]),n._v("  对象，该对象就是封装了 "),s("code",[n._v("SQL")]),n._v("  标签的所有信息，在 "),s("code",[n._v("setStatementCache")]),n._v("  方法中，不仅只把  "),s("code",[n._v("flushCache和useCache")]),n._v("  进行了设置，额外的还带有一个  "),s("code",[n._v("cache")]),n._v(" ，该  "),s("code",[n._v("cache")]),n._v("  就是在调用  "),s("code",[n._v("useNewCache")]),n._v("  方法，内部赋值的 "),s("code",[n._v("currentCache")]),n._v(" ，他们的方法是在同一个类中，因此可以使用。这样  "),s("code",[n._v("MappedStatement")]),n._v("  对象也就拥有了  "),s("code",[n._v("<cache>")]),n._v("  标签的能力，到此解析完毕")]),n._v(" "),s("h2",{attrs:{id:"准备-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备-2"}},[n._v("#")]),n._v(" 准备")]),n._v(" "),s("p",[n._v("和一级缓存一样，都是在  "),s("code",[n._v("openSession")]),n._v("  的时候去做实例化，但是不同的是，二级缓存会在一级缓存上进行一个装饰，并且首要会判断是否允许开启二级缓存。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("if (cacheEnabled) {\n    executor = new CachingExecutor(executor);\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br")])]),s("p",[s("code",[n._v("CachingExecutor")]),n._v("  接收  "),s("code",[n._v("executor")]),n._v(" ，并对其进行包装，内部方法依然调用的是  "),s("code",[n._v("BaseExecutor")]),n._v("  的相关方法。 "),s("code",[n._v("CachingExecutor")]),n._v("  内部还维护了  "),s("code",[n._v("TransactionalCacheManager")]),n._v("  事务缓存管理器，该管理器内部维护  "),s("code",[n._v("Map<Cache, TransactionalCache>")]),n._v(" ， "),s("code",[n._v("TransactionalCache")]),n._v("  内部又维护了  "),s("code",[n._v("Cache")]),n._v("  以及  "),s("code",[n._v("entriesMissedInCache 和 entriesToAddOnCommit")])]),n._v(" "),s("h2",{attrs:{id:"执行-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行-2"}},[n._v("#")]),n._v(" 执行")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('public class CachingExecutor implements Executor {\n\n    private Logger logger = LoggerFactory.getLogger(CachingExecutor.class);\n    private Executor delegate;\n    // 事务缓存管理器\n    private TransactionalCacheManager tcm = new TransactionalCacheManager();\n\n    public CachingExecutor(Executor delegate) {\n        this.delegate = delegate;\n        delegate.setExecutorWrapper(this);\n    }\n\n    @Override\n    public int update(MappedStatement ms, Object parameter) throws SQLException {\n        return delegate.update(ms, parameter);\n    }\n\n    @Override\n    public <E> List<E> query(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, CacheKey key, BoundSql boundSql) throws SQLException {\n        Cache cache = ms.getCache();\n        if (cache != null) {\n            flushCacheIfRequired(ms);\n            if (ms.isUseCache() && resultHandler == null) {\n                @SuppressWarnings("unchecked")\n                List<E> list = (List<E>) tcm.getObject(cache, key);\n                if (list == null) {\n                    list = delegate.<E>query(ms, parameter, rowBounds, resultHandler, key, boundSql);\n                    // cache：缓存队列实现类，FIFO\n                    // key：哈希值 [mappedStatementId + offset + limit + SQL + queryParams + environment]\n                    // list：查询的数据\n                    tcm.putObject(cache, key, list);\n                }\n                // 打印调试日志，记录二级缓存获取数据\n                if (logger.isDebugEnabled() && cache.getSize() > 0) {\n                    logger.debug("二级缓存：{}", JSON.toJSONString(list));\n                }\n                return list;\n            }\n        }\n        return delegate.<E>query(ms, parameter, rowBounds, resultHandler, key, boundSql);\n    }\n\n    @Override\n    public <E> List<E> query(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler) throws SQLException {\n        // 1. 获取绑定SQL\n        BoundSql boundSql = ms.getBoundSql(parameter);\n        // 2. 创建缓存Key\n        CacheKey key = createCacheKey(ms, parameter, rowBounds, boundSql);\n        return query(ms, parameter, rowBounds, resultHandler, key, boundSql);\n    }\n\n    @Override\n    public Transaction getTransaction() {\n        return delegate.getTransaction();\n    }\n\n    @Override\n    public void commit(boolean required) throws SQLException {\n        delegate.commit(required);\n        tcm.commit();\n    }\n\n    @Override\n    public void rollback(boolean required) throws SQLException {\n        try {\n            delegate.rollback(required);\n        } finally {\n            if (required) {\n                tcm.rollback();\n            }\n        }\n    }\n\n    @Override\n    public void close(boolean forceRollback) {\n        try {\n            if (forceRollback) {\n                tcm.rollback();\n            } else {\n                tcm.commit();\n            }\n        } finally {\n            delegate.close(forceRollback);\n        }\n    }\n\n    @Override\n    public void clearLocalCache() {\n        delegate.clearLocalCache();\n    }\n\n    @Override\n    public CacheKey createCacheKey(MappedStatement ms, Object parameterObject, RowBounds rowBounds, BoundSql boundSql) {\n        return delegate.createCacheKey(ms, parameterObject, rowBounds, boundSql);\n    }\n\n    @Override\n    public void setExecutorWrapper(Executor executor) {\n        throw new UnsupportedOperationException("This method should not be called");\n    }\n\n    private void flushCacheIfRequired(MappedStatement ms) {\n        Cache cache = ms.getCache();\n        if (cache != null && ms.isFlushCacheRequired()) {\n            tcm.clear(cache);\n        }\n    }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br"),s("span",{staticClass:"line-number"},[n._v("67")]),s("br"),s("span",{staticClass:"line-number"},[n._v("68")]),s("br"),s("span",{staticClass:"line-number"},[n._v("69")]),s("br"),s("span",{staticClass:"line-number"},[n._v("70")]),s("br"),s("span",{staticClass:"line-number"},[n._v("71")]),s("br"),s("span",{staticClass:"line-number"},[n._v("72")]),s("br"),s("span",{staticClass:"line-number"},[n._v("73")]),s("br"),s("span",{staticClass:"line-number"},[n._v("74")]),s("br"),s("span",{staticClass:"line-number"},[n._v("75")]),s("br"),s("span",{staticClass:"line-number"},[n._v("76")]),s("br"),s("span",{staticClass:"line-number"},[n._v("77")]),s("br"),s("span",{staticClass:"line-number"},[n._v("78")]),s("br"),s("span",{staticClass:"line-number"},[n._v("79")]),s("br"),s("span",{staticClass:"line-number"},[n._v("80")]),s("br"),s("span",{staticClass:"line-number"},[n._v("81")]),s("br"),s("span",{staticClass:"line-number"},[n._v("82")]),s("br"),s("span",{staticClass:"line-number"},[n._v("83")]),s("br"),s("span",{staticClass:"line-number"},[n._v("84")]),s("br"),s("span",{staticClass:"line-number"},[n._v("85")]),s("br"),s("span",{staticClass:"line-number"},[n._v("86")]),s("br"),s("span",{staticClass:"line-number"},[n._v("87")]),s("br"),s("span",{staticClass:"line-number"},[n._v("88")]),s("br"),s("span",{staticClass:"line-number"},[n._v("89")]),s("br"),s("span",{staticClass:"line-number"},[n._v("90")]),s("br"),s("span",{staticClass:"line-number"},[n._v("91")]),s("br"),s("span",{staticClass:"line-number"},[n._v("92")]),s("br"),s("span",{staticClass:"line-number"},[n._v("93")]),s("br"),s("span",{staticClass:"line-number"},[n._v("94")]),s("br"),s("span",{staticClass:"line-number"},[n._v("95")]),s("br"),s("span",{staticClass:"line-number"},[n._v("96")]),s("br"),s("span",{staticClass:"line-number"},[n._v("97")]),s("br"),s("span",{staticClass:"line-number"},[n._v("98")]),s("br"),s("span",{staticClass:"line-number"},[n._v("99")]),s("br"),s("span",{staticClass:"line-number"},[n._v("100")]),s("br"),s("span",{staticClass:"line-number"},[n._v("101")]),s("br"),s("span",{staticClass:"line-number"},[n._v("102")]),s("br"),s("span",{staticClass:"line-number"},[n._v("103")]),s("br"),s("span",{staticClass:"line-number"},[n._v("104")]),s("br"),s("span",{staticClass:"line-number"},[n._v("105")]),s("br"),s("span",{staticClass:"line-number"},[n._v("106")]),s("br"),s("span",{staticClass:"line-number"},[n._v("107")]),s("br"),s("span",{staticClass:"line-number"},[n._v("108")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("public class TransactionalCacheManager {\n\n    private Map<Cache, TransactionalCache> transactionalCaches = new HashMap<>();\n\n    public void clear(Cache cache) {\n        getTransactionalCache(cache).clear();\n    }\n\n    /**\n     * 得到某个TransactionalCache的值\n     */\n    public Object getObject(Cache cache, CacheKey key) {\n        return getTransactionalCache(cache).getObject(key);\n    }\n\n    public void putObject(Cache cache, CacheKey key, Object value) {\n        getTransactionalCache(cache).putObject(key, value);\n    }\n\n    /**\n     * 提交时全部提交\n     */\n    public void commit() {\n        for (TransactionalCache txCache : transactionalCaches.values()) {\n            txCache.commit();\n        }\n    }\n\n    /**\n     * 回滚时全部回滚\n     */\n    public void rollback() {\n        for (TransactionalCache txCache : transactionalCaches.values()) {\n            txCache.rollback();\n        }\n    }\n\n    private TransactionalCache getTransactionalCache(Cache cache) {\n        TransactionalCache txCache = transactionalCaches.get(cache);\n        if (txCache == null) {\n            txCache = new TransactionalCache(cache);\n            transactionalCaches.put(cache, txCache);\n        }\n        return txCache;\n    }\n\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("public class TransactionalCache implements Cache {\n\n    private Cache delegate;\n    // commit 时要不要清缓存\n    private boolean clearOnCommit;\n    // commit 时要添加的元素\n    private Map<Object, Object> entriesToAddOnCommit;\n    private Set<Object> entriesMissedInCache;\n\n    public TransactionalCache(Cache delegate) {\n        // delegate = FifoCache\n        this.delegate = delegate;\n        // 默认 commit 时不清缓存\n        this.clearOnCommit = false;\n        this.entriesToAddOnCommit = new HashMap<>();\n        this.entriesMissedInCache = new HashSet<>();\n    }\n\n    @Override\n    public String getId() {\n        return delegate.getId();\n    }\n\n    @Override\n    public int getSize() {\n        return delegate.getSize();\n    }\n\n    @Override\n    public Object getObject(Object key) {\n        // key：CacheKey 拼装后的哈希码\n        Object object = delegate.getObject(key);\n        if (object == null) {\n            entriesMissedInCache.add(key);\n        }\n        return clearOnCommit ? null : object;\n    }\n\n    @Override\n    public void putObject(Object key, Object object) {\n        entriesToAddOnCommit.put(key, object);\n    }\n\n    @Override\n    public Object removeObject(Object key) {\n        return null;\n    }\n\n    @Override\n    public void clear() {\n        clearOnCommit = true;\n        entriesToAddOnCommit.clear();\n    }\n\n    public void commit() {\n        if (clearOnCommit) {\n            delegate.clear();\n        }\n        flushPendingEntries();\n        reset();\n    }\n\n    public void rollback() {\n        unlockMissedEntries();\n        reset();\n    }\n\n    private void reset() {\n        clearOnCommit = false;\n        entriesToAddOnCommit.clear();\n        entriesMissedInCache.clear();\n    }\n\n    /**\n     * 刷新数据到 MappedStatement#Cache 中，也就是把数据填充到 Mapper XML 级别下。\n     * flushPendingEntries 方法把事务缓存下的数据，填充到 FifoCache 中。\n     */\n    private void flushPendingEntries() {\n        for (Map.Entry<Object, Object> entry : entriesToAddOnCommit.entrySet()) {\n            delegate.putObject(entry.getKey(), entry.getValue());\n        }\n        for (Object entry : entriesMissedInCache) {\n            if (!entriesToAddOnCommit.containsKey(entry)) {\n                delegate.putObject(entry, null);\n            }\n        }\n    }\n\n    private void unlockMissedEntries() {\n        for (Object entry : entriesMissedInCache) {\n            delegate.putObject(entry, null);\n        }\n    }\n\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br"),s("span",{staticClass:"line-number"},[n._v("67")]),s("br"),s("span",{staticClass:"line-number"},[n._v("68")]),s("br"),s("span",{staticClass:"line-number"},[n._v("69")]),s("br"),s("span",{staticClass:"line-number"},[n._v("70")]),s("br"),s("span",{staticClass:"line-number"},[n._v("71")]),s("br"),s("span",{staticClass:"line-number"},[n._v("72")]),s("br"),s("span",{staticClass:"line-number"},[n._v("73")]),s("br"),s("span",{staticClass:"line-number"},[n._v("74")]),s("br"),s("span",{staticClass:"line-number"},[n._v("75")]),s("br"),s("span",{staticClass:"line-number"},[n._v("76")]),s("br"),s("span",{staticClass:"line-number"},[n._v("77")]),s("br"),s("span",{staticClass:"line-number"},[n._v("78")]),s("br"),s("span",{staticClass:"line-number"},[n._v("79")]),s("br"),s("span",{staticClass:"line-number"},[n._v("80")]),s("br"),s("span",{staticClass:"line-number"},[n._v("81")]),s("br"),s("span",{staticClass:"line-number"},[n._v("82")]),s("br"),s("span",{staticClass:"line-number"},[n._v("83")]),s("br"),s("span",{staticClass:"line-number"},[n._v("84")]),s("br"),s("span",{staticClass:"line-number"},[n._v("85")]),s("br"),s("span",{staticClass:"line-number"},[n._v("86")]),s("br"),s("span",{staticClass:"line-number"},[n._v("87")]),s("br"),s("span",{staticClass:"line-number"},[n._v("88")]),s("br"),s("span",{staticClass:"line-number"},[n._v("89")]),s("br"),s("span",{staticClass:"line-number"},[n._v("90")]),s("br"),s("span",{staticClass:"line-number"},[n._v("91")]),s("br"),s("span",{staticClass:"line-number"},[n._v("92")]),s("br"),s("span",{staticClass:"line-number"},[n._v("93")]),s("br"),s("span",{staticClass:"line-number"},[n._v("94")]),s("br"),s("span",{staticClass:"line-number"},[n._v("95")]),s("br")])]),s("p",[n._v("其实上面饶了一圈下来，最终操作的是  "),s("code",[n._v("MappedStatement")]),n._v("  维护的  "),s("code",[n._v("Cache")]),n._v("  对象， "),s("code",[n._v("MappedStatement")]),n._v("  是被全局 "),s("code",[n._v("Configuration")]),n._v("  在缓存的，所以查询结束不会清除  "),s("code",[n._v("MappedStatement")]),n._v("  对象和缓存信息，只有当触发 "),s("code",[n._v("update，commit，rollback")]),n._v("  等才会清除   "),s("code",[n._v("MappedStatement")]),n._v("  里维护的缓存信息")])])}),[],!1,null,null,null);e.default=t.exports}}]);