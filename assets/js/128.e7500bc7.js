(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{605:function(s,t,a){"use strict";a.r(t);var n=a(41),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("blockquote",[a("p",[s._v("本文及后续所有文章都以 21.7.3.14-2 做为版本讲解和入门学习")])]),s._v(" "),a("p",[s._v("在 clickhouse 20.6 版本之前要查看 SQL 语句的执行计划需要设置日志级别为 trace 才能可以看到，并且只能真正执行 sql，在执行日志里面查看。在 20.6 版本引入了原生的执行计划的语法。在 20.6.3 版本成为正式版本的功能。")]),s._v(" "),a("h2",{attrs:{id:"explain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#explain"}},[s._v("#")]),s._v(" EXPLAIN")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPLAIN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AST "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" SYNTAX "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PLAN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" PIPELINE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("setting "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("FORMAT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("AST ：用于查看语法树；")]),s._v(" "),a("li",[s._v("SYNTAX：用于优化语法；")]),s._v(" "),a("li",[s._v("PLAN：用于查看执行计划，默认值。"),a("br"),s._v("\n-> header 打印计划中各个步骤的 head 说明，默认关闭，默认值 0;"),a("br"),s._v("\n-> description 打印计划中各个步骤的描述，默认开启，默认值 1；"),a("br"),s._v("\n-> actions 打印计划中各个步骤的详细信息，默认关闭，默认值 0。")]),s._v(" "),a("li",[s._v("PIPELINE：用于查看 PIPELINE 计划。"),a("br"),s._v("\n-> header 打印计划中各个步骤的 head 说明，默认关闭；"),a("br"),s._v("\n-> graph 用 DOT 图形语言描述管道图，默认关闭，需要查看相关的图形需要配合 graphviz 查看；"),a("br"),s._v("\n-> actions 如果开启了 graph，紧凑打印打，默认开启。")])]),s._v(" "),a("h3",{attrs:{id:"plan-执行计划"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plan-执行计划"}},[s._v("#")]),s._v(" PLAN 执行计划")]),s._v(" "),a("p",[s._v("执行一段复杂的查询语句，可以直接在 CK 中执行")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行")]),s._v("\nexplain "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" database,table,count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" cnt from system.parts where database "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'datasets'")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'system'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \ngroup by database,table order by database,cnt desc limit "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" by database"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回")]),s._v("\nEXPLAIN\nSELECT\n    database,\n    table,\n    count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" AS cnt\nFROM system.parts\nWHERE database IN "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'datasets'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'system'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nGROUP BY\n    database,\n    table\nORDER BY\n    database ASC,\n    cnt DESC\nLIMIT "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" BY database\n┌─explain─────────────────────────────────────────────────────────────────────────────────────┐\n│ Expression "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Projection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                                                                     │\n│   LimitBy                                                                                   │\n│     Expression "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Before LIMIT BY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                                                            │\n│       MergingSorted "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Merge sorted streams "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" ORDER BY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                                     │\n│         MergeSorting "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Merge sorted blocks "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" ORDER BY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                                     │\n│           PartialSorting "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Sort each block "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" ORDER BY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                                     │\n│             Expression "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Before ORDER BY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                                                    │\n│               Aggregating                                                                   │\n│                 Expression "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Before GROUP BY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                                                │\n│                   Filter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("WHERE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                                                            │\n│                     SettingQuotaAndLimits "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Set limits and "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("quota")]),s._v(" after reading from storage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" │\n│                       ReadFromStorage "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SystemParts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                                         │\n└─────────────────────────────────────────────────────────────────────────────────────────────┘\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br")])]),a("h3",{attrs:{id:"syntax-返回优化的语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax-返回优化的语法"}},[s._v("#")]),s._v(" SYNTAX 返回优化的语法")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 先做一次查询")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" ? "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),s._v(" : "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" ? "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'world'")]),s._v(" : "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'atguigu'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("\nnumbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看语法优化")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPLAIN")]),s._v(" SYNTAX "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" ? "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),s._v(" : "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" ? "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'world'")]),s._v(" :\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'atguigu'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启三元运算符优化")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" optimize_if_chain_to_multiif "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 再次查看语法优化")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPLAIN")]),s._v(" SYNTAX "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" ? "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),s._v(" : "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" ? "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'world'")]),s._v(" :\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'atguigu'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回优化后的语句")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" multiIf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xyz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h3",{attrs:{id:"pipeline-执行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pipeline-执行过程"}},[s._v("#")]),s._v(" PIPELINE 执行过程")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("EXPLAIN PIPELINE SELECT sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FROM numbers_mt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" GROUP BY\nnumber % "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# x 4 的意思是用4个线程执行")]),s._v("\n┌─explain─────────────────────────┐\n│ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                    │\n│ ExpressionTransform             │\n│   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Aggregating"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                 │\n│   Resize "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" → "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("                  │\n│     AggregatingTransform × "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("    │\n│       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("              │\n│       ExpressionTransform × "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("   │\n│         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SettingQuotaAndLimits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" │\n│           "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ReadFromStorage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("     │\n│           NumbersMt × "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" → "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("   │\n└─────────────────────────────────┘\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打开其他参数")]),s._v("\nEXPLAIN PIPELINE "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("header")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(",graph"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" SELECT sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" FROM\nnumbers_mt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" GROUP BY number%20"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[s._v("在之前的版本想查看 sql 执行计划或过程")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("clickhouse-client -h 主机名 --send_logs_level"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("trace "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sql"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /dev/null\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("其中，send_logs_level 参数指定日志等级为 trace，<<<将 SQL 语句重定向至 clickhouse-client 进行查询，> /dev/null 将查询结果重定向到空设备吞掉，以便观察日志。")]),s._v(" "),a("p",[s._v("注意：")]),s._v(" "),a("ul",[a("li",[s._v("通过将 ClickHouse 的服务日志，设置到 DEBUG 或者 TRACE 级别，才可以变相实现 EXPLAIN 查询的作用。")]),s._v(" "),a("li",[s._v("需要真正的执行 SQL 查询，CH 才能打印计划日志，所以如果表的数据量很大，最好借助 LIMIT 子句，减小查询返回的数据量。")])]),s._v(" "),a("h2",{attrs:{id:"建表优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建表优化"}},[s._v("#")]),s._v(" 建表优化")]),s._v(" "),a("h3",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),a("h4",{attrs:{id:"时间字段的类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间字段的类型"}},[s._v("#")]),s._v(" 时间字段的类型")]),s._v(" "),a("p",[s._v("建表时能用数值型或日期时间型表示的字段就不要用字符串，全 String 类型在以 Hive 为中心的数仓建设中常见，但 ClickHouse 环境不应受此影响。")]),s._v(" "),a("p",[s._v("虽然 ClickHouse 底层将 DateTime 存储为时间戳 Long 类型，但不建议存储 Long 类型，因为 "),a("strong",[s._v("DateTime 不需要经过函数转换处理，执行效率高、可读性好")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_type2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n id UInt32"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n sku_id String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n total_amount "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Decimal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始时 Int32 类似于 long")]),s._v("\n create_time Int32\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("engine")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ReplacingMergeTree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("create_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 需要转换一次，否则报错")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("partition")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" toYYYYMMDD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("toDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("create_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sku_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h4",{attrs:{id:"空值存储类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空值存储类型"}},[s._v("#")]),s._v(" 空值存储类型")]),s._v(" "),a("p",[s._v("官方已经指出 "),a("strong",[s._v("Nullable 类型几乎总是会拖累性能")]),s._v("，因为存储 Nullable 列时需要创建一个额外的文件来存储 NULL 的标记，并且 Nullable 列无法被索引。因此除非极特殊情况，应直接使用字段默认值表示空，或者自行指定一个在业务中无意义的值（例如用 - 1 表示没有商品 ID）。")]),s._v(" "),a("h3",{attrs:{id:"分区和索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分区和索引"}},[s._v("#")]),s._v(" 分区和索引")]),s._v(" "),a("p",[s._v("分区粒度根据业务特点决定，不宜过粗或过细。一般选择按天分区，也可以指定为 Tuple ()，以单表一亿数据为例，分区大小控制在 10-30 个为最佳。")]),s._v(" "),a("p",[s._v("必须指定索引列，ClickHouse 中的索引列即排序列，通过 order by 指定，一般在查询条件中经常被用来充当筛选条件的属性被纳入进来；可以是单一维度，也可以是组合维度的索引；通常需要满足高级列在前、查询频率大的在前原则；还有基数特别大 (重复少，量多) 的不适合做索引列，如用户表的 userid 字段；通常筛选后的数据满足在百万以内为最佳。")]),s._v(" "),a("h3",{attrs:{id:"表参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表参数"}},[s._v("#")]),s._v(" 表参数")]),s._v(" "),a("p",[s._v("Index_granularity 是用来控制索引粒度的，默认是 8192，如非必须不建议调整。")]),s._v(" "),a("p",[s._v("如果表中不是必须保留全量历史数据，建议指定 TTL（生存时间值），可以免去手动过期历史数据的麻烦，TTL 也可以通过 alter table 语句随时修改。（参考基础文档 4.4.5 数据 TTL）")]),s._v(" "),a("h3",{attrs:{id:"写入和删除优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写入和删除优化"}},[s._v("#")]),s._v(" 写入和删除优化")]),s._v(" "),a("p",[s._v("尽量不要执行单条或小批量删除和插入操作，这样会产生小分区文件，给后台 Merge 任务带来巨大压力")]),s._v(" "),a("p",[s._v("不要一次写入太多分区，或数据写入太快，数据写入太快会导致 Merge 速度跟不上而报错，一般建议每秒钟发起 2-3 次写入操作，每次操作写入 2w~5w 条数据（依服务器性能而定）")]),s._v(" "),a("blockquote",[a("p",[s._v("写入过快报错，报错信息"),a("br"),s._v("\n 1.DB::Exception: Too many parts (304).Merges are processing significantly slower than inserts"),a("br"),s._v("\n2.DB::Exception: Memory limit (for query)exceeded:would use 9.37 GiB (attempt to allocate chunk of 301989888bytes), maximum: 9.31 GiB")])]),s._v(" "),a("p",[s._v("Too many parts 处理，使用 WAL 预写日志，提高写入性能。in_memory_parts_enable_wal 默认为 true ，在服务器内存充裕的情况下增加内存配额，一般通过 max_memory_usage 来实现。")]),s._v(" "),a("p",[s._v("在服务器内存不充裕的情况下，建议将超出部分内容分配到系统硬盘上，但会降低执行速度，一般通过 max_bytes_before_external_group_by、max_bytes_before_external_sort 参数来实现。")]),s._v(" "),a("h3",{attrs:{id:"常见配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见配置"}},[s._v("#")]),s._v(" 常见配置")]),s._v(" "),a("p",[s._v("配置项主要在 "),a("a",{attrs:{href:"https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/",target:"_blank",rel:"noopener noreferrer"}},[s._v("config.xml"),a("OutboundLink")],1),s._v(" 或 "),a("a",{attrs:{href:"https://clickhouse.com/docs/en/operations/settings/settings/",target:"_blank",rel:"noopener noreferrer"}},[s._v("users.xml"),a("OutboundLink")],1),s._v(" 中，config.xml 为服务端的配置，users.xml 做一些优化配置及用户权限配置")]),s._v(" "),a("h4",{attrs:{id:"cpu-资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu-资源"}},[s._v("#")]),s._v(" CPU 资源")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("配置")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("background_pool_size")]),s._v(" "),a("td",[s._v("后台线程池的大小，merge 线程就是在该线程池中执行，该线程池不仅仅是给 merge 线程用的，默认值 16，允许的前提下建议改成 "),a("strong",[s._v("cpu 个数的 2 倍（线程数）")]),s._v("。")])]),s._v(" "),a("tr",[a("td",[s._v("background_schedule_pool_size")]),s._v(" "),a("td",[s._v("执行后台任务（复制表、Kafka 流、DNS 缓存更新）的线程数。默认 128，建议改成 "),a("strong",[s._v("cpu 个数的 2 倍（线程数）")]),s._v("。")])]),s._v(" "),a("tr",[a("td",[s._v("background_distributed_schedule_pool_size")]),s._v(" "),a("td",[s._v("后设置为分布式发送执行后台任务的线程数，默认 16，建议改成 cpu 个数的 2 倍（线程数）。")])]),s._v(" "),a("tr",[a("td",[s._v("max_concurrent_queries")]),s._v(" "),a("td",[s._v("最大并发处理的请求数 (包含 select,insert 等)，默认值 100，推荐 "),a("strong",[s._v("150 (不够再加)~300")]),s._v("。")])]),s._v(" "),a("tr",[a("td",[s._v("max_threads")]),s._v(" "),a("td",[s._v("设置单个查询所能使用的最大 cpu 个数，默认是 cpu 核数")])])])]),s._v(" "),a("h4",{attrs:{id:"内存资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存资源"}},[s._v("#")]),s._v(" 内存资源")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("配置")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("max_memory_usage")]),s._v(" "),a("td",[s._v("此参数在 users.xml 中，表示单次 Query 占用内存最大值，该值可以设置的比较大，这样可以提升集群查询的上限。"),a("strong",[s._v("保留一点给 OS，比如 128G 内存的机器，设置为 100GB")]),s._v("。")])]),s._v(" "),a("tr",[a("td",[s._v("max_bytes_before_external_group_by")]),s._v(" "),a("td",[s._v("一般按照 max_memory_usage 的一半设置内存，当 group 使用内存超过阈值后会刷新到磁盘进行。因为 clickhouse 聚合分两个阶段：查询并及建立中间数据、合并中间数据，"),a("strong",[s._v("结合上一项，建议 50GB")]),s._v("。")])]),s._v(" "),a("tr",[a("td",[s._v("max_bytes_before_external_sort")]),s._v(" "),a("td",[s._v("后当 order by 已使用 max_bytes_before_external_sort 内存就进行溢写磁盘 (基于磁盘排序)，如果不设置该值，那么当内存不够时直接抛错，设置了该值 order by 可以正常完成，但是速度相对存内存来说肯定要慢点 (实测慢的非常多，无法接受)。")])]),s._v(" "),a("tr",[a("td",[s._v("max_table_size_to_drop")]),s._v(" "),a("td",[s._v("此参数在 config.xml 中，应用于需要删除表或分区的情况，默认是 50GB，意思是如果删除 50GB 以上的分区表会失败。"),a("strong",[s._v("建议修改为 0")]),s._v("，这样不管多大的分区表都可以删除。")])])])]),s._v(" "),a("h4",{attrs:{id:"存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储"}},[s._v("#")]),s._v(" 存储")]),s._v(" "),a("p",[s._v("ClickHouse 不支持设置多数据目录，为了提升数据 io 性能，可以挂载虚拟券组，一个券组绑定多块物理磁盘提升读写性能，多数据查询场景 SSD 会比普通机械硬盘快 2-3 倍。")])])}),[],!1,null,null,null);t.default=e.exports}}]);