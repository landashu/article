(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{513:function(s,a,t){"use strict";t.r(a);var e=t(41),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"账号密码-ssl传输安全"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#账号密码-ssl传输安全"}},[s._v("#")]),s._v(" 账号密码 / SSL 传输安全")]),s._v(" "),t("h3",{attrs:{id:"生成证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成证书"}},[s._v("#")]),s._v(" 生成证书")]),s._v(" "),t("p",[s._v("首先在本地生成一个  "),t("code",[s._v("server.keystore.jks")]),s._v("  的 jks 证书，有效期为 365 天。会依次让你键入：密码 -> 重输密码 -> 名与姓 -> 组织单位 -> 组织名 -> 城市 -> 省份 -> 国家两位代码（CN 即可）-> 确认信息（yes 或 no）-> 密码 -> 重输密码")]),s._v(" "),t("blockquote",[t("p",[s._v("建议建立一个 ca 目录来存放这些文件，在该目录下去执行一下命令。")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("keytool -keystore server.keystore.jks -alias localhost -validity "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("365")]),s._v(" -genkey -keyalg RSA\n-keyalg 指定算法为 RSA\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("生成成功后会有一个警告：JKS 密钥库使用专有格式。建议使用 "),t("code",[s._v("keytool -importkeystore -srckeystore server.keystore.jks -destkeystore server.keystore.jks -deststoretype pkcs12")]),s._v("  迁移到行业标准格式 PKCS12。可迁移也可以忽略，我这里选择忽略")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("Warning:\nThe JKS keystore uses a proprietary format. It is recommended to migrate to PKCS12 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" is an industry standard "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" using \n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"keytool -importkeystore -srckeystore server.keystore.jks -destkeystore server.keystore.jks -deststoretype pkcs12"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("校验生成证书内容")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("keytool -list -v -keystore server.keystore.jks\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"生成ca"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成ca"}},[s._v("#")]),s._v(" 生成 CA")]),s._v(" "),t("p",[s._v("通过第一步，集群中的每台机器都生成了一个证书来识别机器。但是，证书是未签名的，这意味着攻击者可以创建一个这样的证书来假装成任何机器。因此需要对这些证书进行签名来防止伪造。")]),s._v(" "),t("p",[s._v("在浏览网站的时候，使用 HTTPS 的网站的证书是由受信任的第三方颁发的，那么这里可以模拟一个假的 CA 中心，只要支持签名即可。下面使用 OpenSSL 来生成一个私钥和一个证书，有效期为 365 天")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("openssl req -new -x509 -keyout ca-key -out ca-cert -days "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("365")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("键入命令后会提示：输入密码 -> 校验输入密码 -> 国家两位代码（CN 即可）-> 省份 -> 城市 -> 名与姓 -> 组织名 — 组织单位 -> 名与姓 (域名)-> 邮箱 ，此输入步骤与上面生成证书世输入步骤相反。")]),s._v(" "),t("p",[s._v("完成后会多出两个文件 "),t("code",[s._v("ca-key 模拟CA的私钥 和 ca-cert 模拟CA的证书")]),s._v(" 。")]),s._v(" "),t("p",[s._v("为了使 client 信任 broker，就需要将 broker 端的证书加入到客户端信任库里面，那么，按照道理来说，想让 client 信任所有的 broker ，那么就需要将所有的 broker 的证书添加到 client 的信任列表里面，那么就增加了不好操作性，比如说我新增了一个 broker，难道还要挨个通知 client 增加信任吗？当然不可能。")]),s._v(" "),t("p",[s._v("证书签名体系中，有一个信任链的概念，就是说，如果使用证书 A 签名了证书 B、C、D，那么只要信任了 A，就会信任 B、C、D。这样来说就好办了，只要信任 CA 的证书，就可以信任所有它签名的证书。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("keytool -keystore server.truststore.jks -alias CARoot -import -file ca-cert \nkeytool -keystore client.truststore.jks -alias CARoot -import -file ca-cert\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("用生成的 CA 来签名第一步生成的证书，证书哪里来？从第一步生成的 server.keystore.jks 里面导出来。导出证书，命名为  "),t("code",[s._v("server.crt")]),s._v(" 。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("keytool -keystore server.keystore.jks -alias localhost -certreq -file server.crt\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("然后生成的 CA 的私钥对刚才导出的证书签名，签名后的证书命名为 server-signed.crt。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pass:后面输入你CA的密码")]),s._v("\nopenssl x509 -req -CA ca-cert -CAkey ca-key -in server.crt -out server-signed.crt -days "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("365")]),s._v(" -CAcreateserial -passin pass:CAPassword\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("命令成功执行后，会生成两个文件 "),t("code",[s._v("server-signed.crt 和 ca-cert.srl")]),s._v(" ， "),t("code",[s._v("ca-cert.srl")]),s._v("  是  "),t("code",[s._v("ca-cert")]),s._v("  的序列号文件，由 -CAcreateserial 参数生成的最后，将 CA 的证书和已经签名的证书导入秘钥仓库")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("keytool -keystore server.keystore.jks -alias CARoot -import -file ca-cert\nkeytool -keystore server.keystore.jks -alias localhost -import -file server-signed.crt\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"配置kafka"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置kafka"}},[s._v("#")]),s._v(" 配置 KAFKA")]),s._v(" "),t("p",[s._v("在 config/server.properties 文件里面修改如下项：listeners 如果只支持 SSL 的话，就需要把 security.inter.broker.protocol 也配置为 SSL，即内部交流方式也为 SSL。")]),s._v(" "),t("div",{staticClass:"language-properties line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("listeners")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("PLAINTEXT://xxx.xxx.xx.xxx:9092,SSL://xxx.xxx.xx.xxx:9093")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#解决dns匹配问题 忽略对证书主机ip匹配,设置为空可使证书的主机名与kafka的主机名不用保持一致")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("ssl.endpoint.identification.algorithm")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 键入CA 密钥密码")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("ssl.key.password")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 键入证书密钥密码")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("ssl.keystore.password")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置 server.keystore.jks 位置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("ssl.keystore.location")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成 server.truststore.jks  的密码")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("ssl.truststore.password")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置 server.truststore.jks 位置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("ssl.truststore.location")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("/opt/software/kafka/ca/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置 clients 也要开启认证。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("ssl.client.auth")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("required")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kafka broker 内部数据传输协议")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("security.inter.broker.protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("SSL")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h3",{attrs:{id:"客户端配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#客户端配置"}},[s._v("#")]),s._v(" 客户端配置")]),s._v(" "),t("p",[s._v("这一步，需要把上面生成的 client.truststore.jks 放到客户端侧。我使用的是 java 客户端，以消费者为例，连接 broker 的配置需要额外添加一下几行：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("props"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"security.protocol"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SSL"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nprops"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ssl.endpoint.identification.algorithm"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nprops"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ssl.truststore.location"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"E:\\\\cert\\\\client.truststore.jks"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nprops"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ssl.truststore.password"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kafka@2022"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("到这里，就可以实现 client 对 broker 的认证，如果是任意的一个 broker，client 是会拒绝连接的。但是，在 kafka 应用里面，好像并不是很实用，除了数据的加密。更多情况下，broker 要防止任意的 client 进行连接，不能让 client 随意连接，那么可以增加 broker 对 client 的认证，也可以开启 SASL (账号密码) 配置。")]),s._v(" "),t("h3",{attrs:{id:"broker-对-client"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#broker-对-client"}},[s._v("#")]),s._v(" broker 对 client")]),s._v(" "),t("p",[s._v("其实原理和上面的是一样的，就是为 client 生成证书，然后让 broker  信任。首先生成各种证书")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#为client生成证书")]),s._v("\nkeytool -genkey -keystore client.keystore.jks -alias localhost -validity "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("365")]),s._v(" -keyalg RSA\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#为client生成CA")]),s._v("\nopenssl req -new -x509 -keyout ca-key -out ca-cert -days "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("365")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导出证书")]),s._v("\nkeytool -keystore client.keystore.jks -alias localhost -certreq -file client.crt\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#签名 pass:CA密码")]),s._v("\nopenssl x509 -req -CA ca-cert -CAkey ca-key -in client.crt -out client-signed.crt -days "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("365")]),s._v(" -CAcreateserial -passin pass:CAPassword\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导入")]),s._v("\nkeytool -keystore client.keystore.jks -alias CARoot -import -file ca-cert\nkeytool -keystore client.keystore.jks -alias localhost -import -file client-signed.crt\n\nkeytool -keystore server.truststore.jks -alias CARoot -import -file ca-cert\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("配置 client，border 不需要改动")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("# ca密码\nprops"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ssl.key.password"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n# client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("keystore"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jks 的位置\nprops"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ssl.keystore.location"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n# client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("keystore"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jks 的密码\nprops"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ssl.keystore.password"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("把以上两个配置合并就组成了 broker 和 client 的双向信任。")]),s._v(" "),t("h3",{attrs:{id:"sasl-plain进行身份验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sasl-plain进行身份验证"}},[s._v("#")]),s._v(" SASL/PLAIN 进行身份验证")]),s._v(" "),t("p",[s._v("SASL/PLAIN 是一种简单的用户名 / 密码身份验证机制，通常与 TLS 一起用于加密以实现安全身份验证。Kafka 支持 SASL/PLAIN 的默认实现，可以扩展到生产环境中使用。我们需要向 Kafka 的 config 目录中添加一个 JAAS 文件。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /opt/software/kafka/config/kafka_server_jaas.conf\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加如下配置")]),s._v("\nKafkaServer "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    org.apache.kafka.common.security.plain.PlainLoginModule required\n        "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"admin-kafka"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"admin-password"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 必须有一个用户对应 username 账户 和 password 密码")]),s._v("\n        user_admin-kafka"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"admin-password"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 其余用户随便设置")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("user_test")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test123"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("JAAS 文件定义了链接 Kafka broker 时所需要的用户名密码及 broker 各个节点之间相互通信的用户名密码，其中：")]),s._v(" "),t("ul",[t("li",[s._v("username 定义一个公共的用户名，用于节点之间进行通信")]),s._v(" "),t("li",[s._v("password 做为公共用户名的密码")]),s._v(" "),t("li",[s._v("user_xxxx 为自定义的用户，主要是客户端用来连接 kafka 的，所有可以使用的用户必须在此定义，不能再之后新增。user_xxxx 中 xxxx 是用户名，等号后面是密码，这里大小写一个字都不能差。")])]),s._v(" "),t("p",[s._v("修改 kafka 启动脚本 kafka-server-start.sh，将 JAAS 配置文件位置作为 JVM 参数传递给 Kafka")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改前")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$base_dir")]),s._v("/kafka-run-class.sh "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$EXTRA_ARGS")]),s._v(" kafka.Kafka "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改后")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$base_dir")]),s._v("/kafka-run-class.sh "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$EXTRA_ARGS")]),s._v(" -Djava.security.auth.login.config"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/software/kafka/config/kafka_server_jaas.conf kafka.Kafka "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v('"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("修改 kafka 配置文件下的 server.properties")]),s._v(" "),t("div",{staticClass:"language-properties line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改之前")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("listeners")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("PLAINTEXT://xxx.xxx.xx.xxx:9092,SSL://xxx.xxxx.xx.xxx:9093")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改之后")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("listeners")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("SASL_SSL://xxx.xxx.xx.xxx:9092")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("security.inter.broker.protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("SASL_SSL")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("sasl.enabled.mechanisms")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("PLAIN")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("sasl.mechanism.inter.broker.protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("PLAIN")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("authorizer.class.name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("kafka.security.auth.SimpleAclAuthorizer")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("allow.everyone.if.no.acl.found")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 超级用户设置 对应必须设置的用户")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("super.users")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("User:admin-kafka")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("ul",[t("li",[s._v("allow.everyone.if.no.acl.found=true，整个 ACL 机制为黑名单机制，即只有黑名单中的用户不能访问资源，非黑名中的用户都可以正常访问 kafka 的资源")]),s._v(" "),t("li",[s._v("allow.everyone.if.no.acl.found=false，默认为 false，ACL 的机制是白名单机制，只有白名单中的用户才能访问 kafka 的资源，其他用户为未授权用户。")])]),s._v(" "),t("p",[s._v("配置完毕后 kafka 就可以重新启动了。启动后看到报错，这里其实建议把 Zookeeper 的安全认证也加上，具体和 kafka 差不多，不加不会影响，就会输出个报错而已。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ERROR "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ZooKeeperClient ACL authorizer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Auth failed. "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("kafka.zookeeper.ZooKeeperClient"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("客户端代码配置")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("props"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"security.protocol"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SASL_PLAINTEXT"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nprops"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sasl.mechanism"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PLAIN"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nprops"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sasl.jaas.config"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"org.apache.kafka.common.security.plain.PlainLoginModule required username=\\"test\\" password=\\"test123\\";"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);