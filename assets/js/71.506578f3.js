(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{548:function(s,a,t){"use strict";t.r(a);var e=t(41),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-docker的感念-docker是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-docker的感念-docker是什么"}},[s._v("#")]),s._v(" 1.docker 的感念，docker 是什么")]),s._v(" "),t("p",[s._v("docker 分为三种感念：镜像 容器  仓库"),t("br"),s._v("\n镜像：类似于一个模板，里面包含了一些内容"),t("br"),s._v("\n容器：容器是一个镜像的实例，如果理解镜像为一个 class，那么容器就被理解为是 new class (); 是镜像的实例"),t("br"),s._v("\n仓库：就是下载镜像资源的地方。"),t("br"),s._v("\ndocker 容器不是虚拟机，容器可以说是一个进程，我们可以给容器分配内存。就像 windows 安装了虚拟机，可以给虚拟机分配内存大小，磁盘空间。")]),s._v(" "),t("h2",{attrs:{id:"_2-docker基础命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-docker基础命令"}},[s._v("#")]),s._v(" 2.docker 基础命令")]),s._v(" "),t("p",[s._v("搜索镜像，从 maven 仓库中查询")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" search mysql\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("列出当前系统存在的镜像")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("给镜像更换名称")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" tag imageId repository:tag\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("删除镜像 (-f 强制) 必须知道镜像的 imageId")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" rmi -f imageId\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("repository:tag (镜像的仓库源：镜像的标签) 拉取")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull repository:tag\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("运行一个容器")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -it  -d --name "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx"')]),s._v(" -p port1:port2 -p port3:port4 -v home/data:/data repository:tag \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("run：运行容器命令")]),s._v(" "),t("li",[s._v("-it：运行后直接与终端交互，比如运行 jar 或其他应用的时候 查看他们的启动信息")]),s._v(" "),t("li",[s._v("-d：后台运行")]),s._v(" "),t("li",[s._v("-p port1:port2：端口映射 port1 (宿主机) port2 (容器) 容器的端口是可以重复的，所以容器和物理机的端口可以一致。rabbitmq 有两个端口 5672 和 15672 所以会用到双 -p repository:tag -> 如果不指定 tag，默认使用最新的")]),s._v(" "),t("li",[s._v('--name "xxx"：指定容器名称')]),s._v(" "),t("li",[s._v("-v /home/data:/data：/home/data (宿主机):/data (容器) 本地地址和容器地址产生挂载关系， 在容器内部该目录下，或者宿主机内部该目录下，修改文件、创建文件，彼此都会同步修改")]),s._v(" "),t("li",[s._v("--restart=always：总是运行，当重启 docker 后会自动运行起来")]),s._v(" "),t("li",[s._v("repository:tag：指定运行镜像的名称")])]),s._v(" "),t("p",[s._v("查看运行的容器")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("查看所有状态的容器")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("检查容器内部信息")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" inspect 容器名称"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("容器前12位id\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("停止容器")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" stop 容器名称"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("容器前12位id\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("开启容器运行")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" start 容器名称\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("删除容器之前必须先停止容器运行")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" 容器名称\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("查看容器日志")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("dokcer logs -f 容器id\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("进入容器内部")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it mysql "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  进入mysql内部")]),s._v("\nmysql -uroot -p123456"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  登录mysql服务 注意这里mysql -uroot -p123456 是连起来的")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("把一个容器制作为一个新的镜像")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" commit \n -m"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"提交信息"')]),s._v(" \n -a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"作者"')]),s._v(" \n 容器id\n 自定义镜像名称:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("自定义标签名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("查看容器的信息")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" inspect 容器ID\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("对于没有私有仓库的要使服务器间共享一个 docker 镜像，可以先把某台机器上的进行先导出，然后其他服务器在导入即可")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导出")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" save \n 镜像ID\n -o /本地路径/文件.tar  这句话意思导出到你宿主机的一个地址，文件名随便起后缀为tar，路径要提前建好\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导入")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" load "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" /上传文件的地址/导出的文件名.tar\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看导入的镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("容器之间共享，容器 2 共用 容器 1")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" tun -it \n  -- name 容器2\n  --volumes-from 容器1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("容器1必须已启动"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  镜像名称\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("查看制作镜像时叠加其他镜像的操作")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" 镜像ID\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"_3-修改已经存在容器的端口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-修改已经存在容器的端口"}},[s._v("#")]),s._v(" 3. 修改已经存在容器的端口")]),s._v(" "),t("p",[s._v("1、停止容器 (docker stop d00254ce3af7)"),t("br"),s._v("\n 2、停止 docker 服务 (systemctl stop docker)"),t("br"),s._v("\n 3、修改这个容器的 hostconfig.json 文件中的端口（原帖有人提到，如果 config.v2.json 里面也记录了端口，也要修改）")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /var/lib/docker/containers/d00254ce3af7*    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里是CONTAINER ID")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" hostconfig.json\n如果之前没有端口映射, 应该有这样的一段:\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PortBindings"')]),s._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n增加一个映射, 这样写:\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PortBindings"')]),s._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"8080/tcp"')]),s._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HostIp"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HostPort"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"60000"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n前一个数字是容器端口, 后一个是宿主机端口。将宿主机的60000端口映射到容器的8080端口\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("4、启动 docker 服务 (systemctl start docker)"),t("br"),s._v("\n 5、启动容器 (docker start d00254ce3af7)")]),s._v(" "),t("h2",{attrs:{id:"_4-制作镜像的基本命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-制作镜像的基本命令"}},[s._v("#")]),s._v(" 4. 制作镜像的基本命令")]),s._v(" "),t("h3",{attrs:{id:"概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/img/docker/400/img.png",alt:""}})]),s._v(" "),t("p",[s._v("Dockerfile 默认会把当前所在文件的上下问都发送给 Docker Server，最终制作成一个镜像，比如你得 DockerFile 在 linux 的根 (/) 目录，那么就会递归根目录下的所有文件，发送到 Docker Server 制作镜像，所以制作 Dockerfile 最好是在某一个地方新建文件夹去制作。制作过程都是依赖于一个个的镜像，所以会有缓存加速下次制作，如果不需要依赖缓存 可以在命令制作的最后面加  "),t("code",[s._v("--no-cache")])]),s._v(" "),t("p",[s._v(".dockerIgnore 是用来忽略哪些文件或目录不参与到制作镜像中")]),s._v(" "),t("p",[s._v("制作命令： "),t("code",[s._v("docker build -f /home/docker/nginx/Dockerfile .")]),s._v("  -f 用来指定 Dockerfile 所在的位置，一般会使用  "),t("code",[s._v("docker build -t nginx2 .")]),s._v("  -t 在当前目录制作镜像， "),t("code",[s._v("nginx2")]),s._v("  镜像的名字， "),t("code",[s._v(".")]),s._v("  代表 Dockerfile 就在当前目录")]),s._v(" "),t("h3",{attrs:{id:"命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[s._v("#")]),s._v(" 命令")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("指令")]),s._v(" "),t("th",[s._v("描述")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("FROM")]),s._v(" "),t("td",[s._v("构建的新镜像是基于哪个镜像。例如：FROM centos:6，第一个指令必须是 FROM")])]),s._v(" "),t("tr",[t("td",[s._v("MAINTAINER")]),s._v(" "),t("td",[s._v("镜像维护者姓名或邮箱地址。例如：MAINTAINER Mr.chen")])]),s._v(" "),t("tr",[t("td",[s._v("RUN")]),s._v(" "),t("td",[s._v('构建镜像时运行的 Shell 命令。例如：RUN ["yum","install","httpd"] 也可以直接 RUN yum install httpd  或者 RUN yum install httpd')])]),s._v(" "),t("tr",[t("td",[s._v("CMD")]),s._v(" "),t("td",[t("code",[s._v("容器运行时执行的Shell命令")]),s._v(' （编写的 dockerfile 中多个 cmd 都会执行，但默认保留最后一个命令，如果 docker run 运行时传递 command，会覆盖 cmd 的保留命令），启动容器会执行 CMD 的保留命令。例如：CMD ["-c","/start.sh"] 也可以是 CMD echo \'hello docker\'')])]),s._v(" "),t("tr",[t("td",[s._v("EXPOSE")]),s._v(" "),t("td",[s._v("声明容器运行的服务端口。例如：EXPOSE 80 443，但是默认都是 tcp 协议，如果想要暴漏 udp 协议，则是  EXPOSE 80/udp ，注意只能是 tcp 或 udp")])]),s._v(" "),t("tr",[t("td",[s._v("ENV")]),s._v(" "),t("td",[s._v("设置容器内的环境变量。例如：ENV MYSQL_ROOT_PASSWORD 123456")])]),s._v(" "),t("tr",[t("td",[s._v("ADD")]),s._v(" "),t("td",[s._v('将宿主机目录下的文件拷贝进镜像且 ADD 命令会自动处理 URL 和解压 tar 包 例如：ADD ["src","dest"] 或者 ADD '),t("a",{attrs:{href:"https://xxx.com/html.tar.gz",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://xxx.com/html.tar.gz"),t("OutboundLink")],1),s._v(" /var/www/html  或者：ADD html.tar.gz/var/www/html")])]),s._v(" "),t("tr",[t("td",[s._v("COPY")]),s._v(" "),t("td",[s._v("拷贝文件或目录到镜像（不能自动解压缩）。例如：COPY ./start.sh/start.sh")])]),s._v(" "),t("tr",[t("td",[s._v("ENTRYPOINT")]),s._v(" "),t("td",[s._v('运行容器时执行的 Shell 命令（不能被运行时传递的参数覆盖)，比 CMD 牛皮一些。例如：ENTRYPOINT ["/bin/bash","-c","/start.sh"] 或者 ENTRYPOINT /bin/bash -c "/start.sh"')])]),s._v(" "),t("tr",[t("td",[s._v("VOLUME")]),s._v(" "),t("td",[s._v('指定容器挂载点到宿主机自动生成的目录或其他容器 例如：VOLUME ["/var/lib/mysql"]')])]),s._v(" "),t("tr",[t("td",[s._v("USER")]),s._v(" "),t("td",[s._v("为 RUN，CMD 和 ENTRYPOINT 执行命令指定运行用户  例如：USER Mr_chen")])]),s._v(" "),t("tr",[t("td",[s._v("WORKDIR")]),s._v(" "),t("td",[s._v("指定在创建容器后，终端默认登录进来的工作目录，一个落脚点  例如：WORKDIR /data， "),t("code",[s._v("该命令也会影响 ENTRYPOINT 运行例如jar包时的位置，默认会自带WORKDIR的路径")])])]),s._v(" "),t("tr",[t("td",[s._v("HEALTHCHECK")]),s._v(" "),t("td",[s._v("健康检查。例如：HEALTHCHECK --interval=5m --timeout=3s --retries=3 CMD curl -f "),t("a",{attrs:{href:"http://localhost/",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://localhost/"),t("OutboundLink")],1),s._v("  exit 1")])]),s._v(" "),t("tr",[t("td",[s._v("ARG")]),s._v(" "),t("td",[s._v("在构建镜像时指定一些参数。例如：ARG user")])]),s._v(" "),t("tr",[t("td",[s._v("ONBUILD")]),s._v(" "),t("td",[s._v("当镜像被继承后触发在 ONBUILD 里写的命令，继承者直接使用 FROM 命令继承当前镜像的名称即可，在 build 的时候触发")])])])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("从 docker17.05 版本开始，dockerfile 中允许使用多个 FROM 指令")])]),s._v(" "),t("h3",{attrs:{id:"配置idea连接docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置idea连接docker"}},[s._v("#")]),s._v(" 配置 Idea 连接 Docker")]),s._v(" "),t("p",[s._v("配置后方便我们把写好的 Docker File 直接打成镜像到 Docker 中，方便运行和管理")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /usr/lib/systemd/system/docker.service\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"/assets/img/docker/400/img_3.png",alt:""}})]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("systemctl daemon-reload // "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，加载docker守护线程\nsystemctl restart "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" // "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("，重启docker\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"实战构建springboot应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实战构建springboot应用"}},[s._v("#")]),s._v(" 实战构建 SpringBoot 应用")]),s._v(" "),t("p",[s._v("在应用的根目录中创建 Dockerfile，具体构建之前一定要了解 SpringBoot 配置文件的加载路径优先级，这里牵扯到我们在修改配置文件时，可以指定挂载外部文件修改后同步到容器，否则，每改一次都要重新制作镜像")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("SpringBoot 配置文件的加载路径优先级："),t("br"),s._v("\n工程根目录:./config/"),t("br"),s._v("\n 工程根目录：./"),t("br"),s._v("\nclasspath:/config/"),t("br"),s._v("\nclasspath:/")])]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 基础镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" openjdk:8-jre-slim")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 作者")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MAINTAINER")]),s._v(" biguncle")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" PARAMS="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 8081")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 时区")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" TZ=Asia/Shanghai")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" ln -snf /usr/share/zoneinfo/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$TZ")]),s._v(" /etc/localtime && echo "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$TZ")]),s._v(" > /etc/timezone")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加应用")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" ./target/tool-boot-0.0.1-SNAPSHOT.jar /server/tool-boot.jar")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个工作目录，并将外部配置文件复制到镜像中")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" mkdir /server/config")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" /src/main/resources/application.yml /app/config/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /server")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 在镜像运行为容器后执行的命令")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" java -jar -Dpolyglot.engine.WarnInterpreterOnly=false tool-boot.jar  "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PARAMS")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[s._v("执行命令")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#build 构建应用的镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build -f ./Dockerfile -t "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("875730567")]),s._v("/easy-manager-tool "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("运行容器")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#build 构建应用的镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8081")]),s._v(":8081 --name -v /opt:/server/config easy-manager-tool -d "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("875730567")]),s._v("/easy-manager-tool\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"_5-docker-使用阿里云仓库或自建仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-docker-使用阿里云仓库或自建仓库"}},[s._v("#")]),s._v(" 5. Docker 使用阿里云仓库或自建仓库")]),s._v(" "),t("h3",{attrs:{id:"阿里云仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#阿里云仓库"}},[s._v("#")]),s._v(" 阿里云仓库")]),s._v(" "),t("ol",[t("li",[s._v("先登录阿里云镜像服务，"),t("a",{attrs:{href:"https://cr.console.aliyun.com/cn-shanghai/instances",target:"_blank",rel:"noopener noreferrer"}},[s._v("地址"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("创建个人或企业实例")]),s._v(" "),t("li",[s._v("创建镜像仓库，这个仓库可以建多个，看自己")]),s._v(" "),t("li",[s._v("创建完毕之后可以根据阿里云提供的步骤进行推送或拉取")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/img/docker/400/img_1.png",alt:""}})]),s._v(" "),t("p",[s._v("如果我们只是想用阿里云的镜像加速器，可以找到如下图操作即可。")]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/img/docker/400/img_2.png",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"自建仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自建仓库"}},[s._v("#")]),s._v(" 自建仓库")]),s._v(" "),t("ol",[t("li",[s._v("拉取仓库镜像")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull registry\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[s._v("运行镜像")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d -v /edc/images/registry:/var/lib/registry \n-p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(":5000 \n--restart"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("always \n--name xdp-registry registry\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[s._v("查看镜像信息")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" http://127.0.0.1:5000/v2/_catalog\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"_6-上传dockerhub"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-上传dockerhub"}},[s._v("#")]),s._v(" 6. 上传 DockerHub")]),s._v(" "),t("ol",[t("li",[s._v("首先保证你登录")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" login --username"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("xxxx\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[s._v("构建镜像")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build -t 账号/应用名称 -f Dockerfile "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[s._v("在 DockerHub 新建仓库 https://hub.docker.com/")]),s._v(" "),t("li",[s._v("给镜像打一个 tag 标签")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" tag 账号/应用名称 账号/标签名称:标签版本\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ol",{attrs:{start:"5"}},[t("li",[s._v("上传")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" push 账号/标签名称:标签版本\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);