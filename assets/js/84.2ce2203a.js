(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{562:function(s,a,e){"use strict";e.r(a);var t=e(41),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("blockquote",[e("p",[s._v("本文及后续所有文章都以 3.7.0 做为版本讲解和入门学习")])]),s._v(" "),e("p",[s._v("Zookeeper 是源代码开放的分布式协调服务，是一个高性能的分布式数据一致性的解决方案，它将那些复杂的，容易出错的分布式一致性服务封装起来。用户可以通过调用 Zookeeper 提供的接口来解决一些分布式应用中的实际问题。")]),s._v(" "),e("h2",{attrs:{id:"zookeeper-特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-特性"}},[s._v("#")]),s._v(" zookeeper 特性")]),s._v(" "),e("h3",{attrs:{id:"数据一致性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据一致性"}},[s._v("#")]),s._v(" 数据一致性")]),s._v(" "),e("p",[s._v("client 不论连接到那个 Zookeeper，展示都是同一个试图，即查询的数据都是一样得。这是 zookeeper 的重要特性。")]),s._v(" "),e("h3",{attrs:{id:"原子性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原子性"}},[s._v("#")]),s._v(" 原子性")]),s._v(" "),e("p",[s._v("要么都更新成功，要么都不更新。即 要么整个集群中所有机器的成功更新某一个事务，要么都不更新。")]),s._v(" "),e("h3",{attrs:{id:"持久性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#持久性"}},[s._v("#")]),s._v(" 持久性")]),s._v(" "),e("p",[s._v("一旦 zk 服务端成功的更新一个事务，并完成对客户端的响应，那么该事务所引起的服务端的状态变更将会一直保留下来，除非有另一个事务又对其进行了改变。")]),s._v(" "),e("h3",{attrs:{id:"实时性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实时性"}},[s._v("#")]),s._v(" 实时性")]),s._v(" "),e("p",[s._v("Zookeeper 保证客户端将在非常短的时间间隔范围内获得服务器的更新信息。前提条件是，网络状态良好。")]),s._v(" "),e("h3",{attrs:{id:"顺序性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#顺序性"}},[s._v("#")]),s._v(" 顺序性")]),s._v(" "),e("p",[s._v("如果在一台服务器上消息 a 在消息 b 前发布，则所有 Server 上消息 a 都在消息 b 前被发布。底层是通过递增的事务 id (zxid) 来实现的。")]),s._v(" "),e("h3",{attrs:{id:"过半性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#过半性"}},[s._v("#")]),s._v(" 过半性")]),s._v(" "),e("p",[s._v("zookeeper 集群必须有半数以上的机器存活才能正常工作。因为只有满足过半数，才能满足选举机制选出 Leader。也只有过半，在做事务决议，事务才能更新。所以一般说 zookeeper 集群最好是奇数。")]),s._v(" "),e("h2",{attrs:{id:"zookeeper-特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-特点"}},[s._v("#")]),s._v(" zookeeper 特点")]),s._v(" "),e("p",[s._v("zookeeper 结构类似于目录结构，会有一个根节点 / ，每个节点叫 znode 节点，每个 znode 节点都可以拥有自己的节点")]),s._v(" "),e("p",[s._v("zookpeer 的所有操纵，都是基于节点路径来操作的，每个 znode 节点可以存储数据且名字唯一，多个 znode 节点形成一个 znode 树。")]),s._v(" "),e("p",[s._v("znode 树是维系在内存中，即 znode 节点的数据也是存在内存中的，目的是用户快速查询。")]),s._v(" "),e("p",[s._v("Zookepper 的使用场景是做分布式协调，"),e("strong",[s._v("多台 ZK 节点存储的数据是相同的")])]),s._v(" "),e("p",[s._v("Zookpper 提供了持久化操作，在 /conf/zoo_sample.cfg 文件中由 dataDir 来决定存储路径")]),s._v(" "),e("p",[s._v("Zookpper 会为每个事务分配一个全局递增事务 ID。cZxid（创建节点的事务 ID）、mZxid（修改节点的事务 ID）、pZxid（此节点的子节点最新的事务 ID）")]),s._v(" "),e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),e("h3",{attrs:{id:"单机"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单机"}},[s._v("#")]),s._v(" 单机")]),s._v(" "),e("p",[s._v("下载")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.7.0/apache-zookeeper-3.7.0-bin.tar.gz\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("解压")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf apache-zookeeper-3.7.0.tar.gz\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" apache-zookeeper-3.7.0  zookeeper-3.7.0\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("启动")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/software/zookeeper-3.7.0/conf\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" zoo_sample.cfg zoo.cfg\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/software/zookeeper-3.7.0/bin\n./zkServer.sh start\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("查看启动成功或进程")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("jps\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("启动后回在 bin 目录下生成 zookeeper.out 文件，用于查看报错信息。")]),s._v(" "),e("h3",{attrs:{id:"集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#集群"}},[s._v("#")]),s._v(" 集群")]),s._v(" "),e("p",[s._v("zookeeper 的集群相对简单，修改方式如下：")]),s._v(" "),e("ol",[e("li",[s._v("修改 zoo.cfg")])]),s._v(" "),e("div",{staticClass:"language-properties line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-properties"}},[e("code",[e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("server.1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("本机ip:2888:3888")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("server.2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("其他IP1:2888:3888")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("server.3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("其他IP2:2888:3888")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("1,2,3 为 zookeeper 的集群 id，2888 原子广播端口，3888 选举端口。")]),s._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[s._v("在 zookeeper 目录下创建 tmp/myid，写下 ID 号")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"3"}},[e("li",[s._v("把 zookeeper 发送给其他服务器")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" -r /opt/software/zookeeper-3.7.0 root@其他IP:/opt/software/\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"4"}},[e("li",[e("p",[s._v("修改其他服务机的 tmp/myid，myid 一定是随着 zoo.cfg 配置的修改，如其他服务机的 IP 为 其他 IP2，那么他所对因的 myid 就为以上配置文件 3 的值。")])]),s._v(" "),e("li",[e("p",[s._v("查看是否启动成功 jps")])])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2498")]),s._v(" ProdServerStart\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"6"}},[e("li",[s._v("启动成功在 bin/ 下查看状态")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("./zkServer.sh status\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"zookeeper选举机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper选举机制"}},[s._v("#")]),s._v(" zookeeper 选举机制")]),s._v(" "),e("p",[s._v("一阶段：数据恢复阶段。每台 ZK 服务器启动时，会从本地数据目录中，找到自己所拥有的最大 (最新) 的事务 ID (Zxid)。")]),s._v(" "),e("p",[s._v("二阶段：每台 zk 服务器都会提交自己所持有的有效数据进行选举，推荐自己当 Leader，选举数据内容包含如下：")]),s._v(" "),e("ul",[e("li",[s._v("自己的最大事务 ID (Zxid)")]),s._v(" "),e("li",[s._v("自己的选举 ID (myid)")]),s._v(" "),e("li",[s._v("逻辑的钟值，确保每台 ZK 服务器在同一轮选择中")]),s._v(" "),e("li",[s._v("当前 ZK 的状态：Looking（处于选举状态）、Follower（处于追随者状态）、Leader（处于领导者状态）、Observer（处于观察者状态）")])]),s._v(" "),e("p",[s._v("三阶段：先比较 Zxid，谁大谁当 Leader，Zxid 越大，数据越新。如果 Zxid 比较不出来，就比较选举 myid，谁大谁 Leader。PK 的原则是要满足过半性，即：1. 选举时要满足过半同意 2. ZK 服务器要满足过半存活。所以搭建集群建议为 奇数。")]),s._v(" "),e("h4",{attrs:{id:"zookeeper集群读写"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper集群读写"}},[s._v("#")]),s._v(" zookeeper 集群读写")]),s._v(" "),e("p",[s._v("zookeeper 的读可以从任意节点上去读，但是写的话，必须发给 Leader，由 Leader 去发送给所有子节点，写 就使用的是 "),e("strong",[s._v("原子广播性")]),s._v("。")]),s._v(" "),e("p",[s._v("如果写的操作发动给 子节点，则子节点会转发给 Leader，由 Leader 做原子广播。")]),s._v(" "),e("h4",{attrs:{id:"zookeeper集群脑裂"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper集群脑裂"}},[s._v("#")]),s._v(" zookeeper 集群脑裂")]),s._v(" "),e("p",[s._v("当一个集群出现两个 Leader 这种现象称为脑裂，脑裂的危害会使得数据同步过程紊乱。")]),s._v(" "),e("p",[s._v("zookeeper 解决脑裂的机制是选出一个 Leader，会为每个 Leader 分配一个 Epoch ID。并且 Epoch ID 是递增的。所以子节点可以根据 Epoch ID 数字号，来选择接受最大的 Epooch ID 的最新数据。")]),s._v(" "),e("p",[s._v("Zxid 是由两部分组成，高 32 位是 EpochID，低 32 位是事务 ID。每次新选一个 Leader EpochID 会自增，事务 ID 会从新开始计量。")]),s._v(" "),e("h2",{attrs:{id:"observer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#observer"}},[s._v("#")]),s._v(" Observer")]),s._v(" "),e("p",[s._v("zookeeper 的选举模式，决定了 zookeeper 不能有太多的节点，节点越多性能越差，所以 zookeeper 引入了 Observer 观察者。")]),s._v(" "),e("p",[s._v("观察者不参与投票，他只监听投票的结果，但客户端可以连接他们并进行读写操作，这些操作都会被转发到 Leader，所以我们尽可能的可以多加 Observer 节点。")]),s._v(" "),e("p",[s._v("observer 的配置如下：")]),s._v(" "),e("div",{staticClass:"language-properties line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-properties"}},[e("code",[e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("peerType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("observer")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("server.1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("IP1:2888:3888")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("server.2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("IP2:2888:3888")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("server.3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("IP3:2888:3888:observer")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("修改完 observer，其他服务器的 zoo.cfg 都要改成")]),s._v(" "),e("div",{staticClass:"language-properties line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-properties"}},[e("code",[e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("server.1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("IP1:2888:3888")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("server.2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("IP2:2888:3888")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("server.3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("IP3:2888:3888:observer")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"zookeeper常用配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper常用配置"}},[s._v("#")]),s._v(" zookeeper 常用配置")]),s._v(" "),e("div",{staticClass:"language-properties line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-properties"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 客户端连接端口")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("clientPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("2181")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 存储快照文件snapshot的目录，默认情况下，事务日志也存在这里")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("dataDir")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("/home/tmp/datadir")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 事务输出日志目录")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("dataLogDir")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("/home/datalog")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ZK 中所有时间都是以这个时间单元为基础进行整数倍数配置的")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如 tickTime=2000，则下限 2*tickTime=4000，上限 20*tickTime=40000")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 就是 API在连接 ZK时，如果设置3000，小于ZK下限 2*tickTime，则取4000为数")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("tickTime")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("2000")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Follower(子) 启动过程中，会从Leader同步所有数据，然后确定自己能够对外服务的起始状态。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Leader 允许 Follower在 initLimit 时间内完成这个工作。通常不关心这个参数设置。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只有ZK集群数据确实很大，Follower在启动时候，")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从Leader上同步数据时间边长，则适当调大这个参数。该参数默认：10*tickTime")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("initLimit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("10")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Leader 与 Follower 之间发送消息，请求和应答时间长度。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果 Follower 在设置时间内不能与Leader 进行通信，那么Follower将被丢弃")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认时：5*tickTime")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("syncLimit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("5")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# session超时时间限制，如果客户端设置的时间不在这个范围，那么会强制设置为最大或最小时间。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认的session超时时间是在 2*tickTime~2=*tickTime 这个范围")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# minSessionTimeout=4000")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# maxSessionTimeout=40000")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每进行 snapCount次事务日志输出后，触发一次快照(snapshot)，此时，ZK会生成一个 snapshot.* 文件，")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同时创建一个新得事务日志文件log.*。默认是 100000")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此外，在产生心Leader时，也会生成新的快照文件，同时会生成对应的事务文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("snapCount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("100000")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3.4.0及之后版本，ZK 提供了自动清理事务日志和快照文件的功能，")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这个参数指定了清理频率，单位是小时，需要配置一个1或更大的整数，0为不开启自动清理功能。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# purgeInterval 小时清理，snapRetainCount 保留多少个文件不被清理")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("autopurge.snapRetainCount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("3")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("autopurge.purgeInterval")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 控制每个znode节点都可以存储数据的大小，每个节点最大数据量。默认是1M ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("jute.maxbuffer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("1M")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最大请求堆积数，默认是1000。ZK运行的时候，尽管server已经没有空闲来处理更多的客户端的请求了，")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 但是还是允许客户端请求提交到服务器上来，以提高吞吐性能。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当然，为了防止Server内存溢出，这个请求堆积数还是需要限制的。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("globalOutstandingLimit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("1000")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 预先开辟的磁盘空间，用于后续读写入事务日志。默认是64M，每个事务日志大小就是64M")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("preAllocSize")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("64M")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认为3，即基于TCP fast paxos election 选举算法。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ZK 的ZAK写一是类似2PC算法，ZAB算法改进的原型算法是Paxos算法。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3.4版本后，1和2对应的选举算法都是UDP，已弃用，所以不需要改该配置。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("electionAlg")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("3")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认情况下，Leader 是会接收客户端链接，并提供读写服务。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 但是，如果你想Leader专注于集群中机器的协调，那么可以将这个参数设置为no，")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这样一来，会提高整个ZK集群性能。 ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("LeaderServers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("no")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 控制每台ZK服务器能处理的客户端并发请求数。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("maxClientCnxns")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("60")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br")])]),e("h2",{attrs:{id:"zookeeper-常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-常用命令"}},[s._v("#")]),s._v(" zookeeper 常用命令")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看当前znode中包含的内容")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" /\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看当前节点的详细数据")]),s._v("\nls2 /\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建两个普通节点")]),s._v("\ncreate /sanguo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jinlian"')]),s._v("\ncreate /sanguo/shuguo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"liubei"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取节点的值")]),s._v("\nget /sanguo\nget /sanguo/shuguo\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建短暂性节点")]),s._v("\ncreate -e /sanguo/wuguo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zhouyu"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 退出当前客户端然后再重启客户端")]),s._v("\nquit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建带序号的节点")]),s._v("\ncreate -s /sanguo/weiguo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"caocao"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改节点的数据值")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" /sanguo/weiguo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"caozhi"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除节点")]),s._v("\ndelete ./sanguo/jin\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#递归删除节点")]),s._v("\nrmr /sanguo/weiguo\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注册监听/sanguo节点的子节点变化，若路径有变化会通知")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" /sanguo "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 节点值变化的监听")]),s._v("\nget /sanguo "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看节点状态")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("stat")]),s._v(" /sanguo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);