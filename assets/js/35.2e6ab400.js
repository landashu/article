(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{512:function(e,r,s){"use strict";s.r(r);var t=s(41),a=Object(t.a)({},(function(){var e=this,r=e.$createElement,s=e._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("正常来说我们使用别人的私有库就足够了，比如使用 Harbor，它可以帮我们很好的管理 docker，以及部署为私有或公有库给企业或其他人使用，如果想开发一套那么需要了解 docker 相关的 API，其中 dockerAPI 分为如下三部分：")]),e._v(" "),s("ul",[s("li",[e._v("Docker Engine API：Docker Engine API 是 Docker 引擎的 API 接口，用于与 Docker 引擎进行通信和管理。通过 Docker Engine API，可以管理容器、镜像、网络、卷等 Docker 相关资源。可以使用 Docker Engine API 创建、启动、停止和删除容器，构建和推送镜像，以及进行容器和镜像的管理和监控。")]),e._v(" "),s("li",[e._v("Docker Hub API：Docker Hub API 是与 Docker Hub 交互的 API 接口。Docker Hub 是一个公共的 Docker 镜像仓库，用于存储和分享 Docker 镜像。Docker Hub API 允许用户通过 API 接口与 Docker Hub 进行交互，可以搜索、下载、上传和删除镜像，管理仓库、标签和组织等")]),e._v(" "),s("li",[e._v("Registry API：Registry API 是与 Docker Registry 进行交互的 API 接口。Docker Registry 是一个私有的 Docker 镜像仓库，可以自己搭建和管理。Registry API 允许用户通过 API 接口与私有的 Docker Registry 进行交互，可以上传、下载和删除镜像，管理仓库和标签等")])]),e._v(" "),s("p",[e._v("没错，如果需要建立自己的 docker 私有库就要用到 Registry API。")]),e._v(" "),s("h2",{attrs:{id:"准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[e._v("#")]),e._v(" 准备")]),e._v(" "),s("p",[e._v("要在本地搭建私有的 Docker Registry，您可以按照以下步骤进行操作：")]),e._v(" "),s("ol",[s("li",[e._v("确保已经安装 Docker，若还没有，您可以从 Docker 官方网站（https://www.docker.com/）下载并安装适用于您的操作系统的 Docker 版本。")]),e._v(" "),s("li",[e._v("配置 Docker Registry：接下来，您需要创建并配置 Docker Registry。可以按照以下步骤进行配置："),s("br"),e._v("\n2.1 创建一个存储 Registry 数据的目录。例如，您可以创建一个名为 /var/lib/registry 的目录。"),s("br"),e._v("\n2.2 创建一个名为 config.yml 的配置文件，并在其中指定 Registry 的配置选项。例如，您可以指定 Registry 监听在 5000 端口上，并允许匿名访问。")]),e._v(" "),s("li",[e._v("启动 Registry 容器：使用以下命令在本地启动 Registry 容器：")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("docker run -d -p 5000:5000 --restart=always --name registry -v /opt/software/dockerRegistry:/opt/software/dockerRegistry -v /opt/software/dockerRegistry/config.yml:/opt/software/dockerRegistry/config.yml registry:2\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("这个命令将在本地启动一个名为 registry 的容器，并将本地的 /var/lib/registry 目录挂载到容器的 /var/lib/registry 目录，以保存 Registry 的数据。"),s("br"),e._v("\n4. 测试 Registry：现在，您的私有 Docker Registry 应该已经在本地成功搭建。您可以使用以下命令来测试 Registry 是否正常工作：")]),e._v(" "),s("ul",[s("li",[e._v("从 Docker Hub 拉取一个镜像：")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("docker pull ubuntu\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("ul",[s("li",[e._v("标记该镜像为私有 Registry 的地址：")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("docker tag ubuntu localhost:5000/my-ubuntu\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("ul",[s("li",[e._v("将标记的镜像推送到私有 Registry：")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("docker push localhost:5000/my-ubuntu\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("ul",[s("li",[e._v("从私有 Registry 拉取镜像：")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("docker pull localhost:5000/my-ubuntu\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("如果上述步骤都成功执行，那么您的私有 Docker Registry 就已经搭建好了，并且可以通过 localhost:5000 进行访问。"),s("br"),e._v("\n请注意，上述步骤中的具体细节可能因您的操作系统和配置而有所不同。您可以参考 Docker 官方文档和 Registry 文档来获取更详细的指南和说明。")]),e._v(" "),s("h3",{attrs:{id:"config-yml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#config-yml"}},[e._v("#")]),e._v(" config.yml")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("version: 0.1\nlog:\n  level: debug\nstorage:\n  filesystem:\n    rootdirectory: /opt/software/dockerRegistry\nhttp:\n  addr: :5000\n  headers:\n    X-Content-Type-Options: [nosniff]\nauth:\n  anonymous: true\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br")])]),s("p",[e._v("在 config.yml 文件中，您可以指定不同的配置选项来自定义您的私有 Docker Registry。以下是一些常见的配置选项及其含义：")]),e._v(" "),s("ol",[s("li",[e._v("version：指定配置文件的版本。目前可用的版本为 0.1。")]),e._v(" "),s("li",[e._v("log：用于配置 Registry 的日志选项。")])]),e._v(" "),s("ul",[s("li",[e._v("log.level：指定日志级别。可以设置为 debug、info、warn、error 或 fatal，以控制日志的详细程度。")])]),e._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[e._v("storage：用于配置 Registry 的存储选项。")])]),e._v(" "),s("ul",[s("li",[e._v("storage.filesystem.rootdirectory：指定存储镜像数据的目录路径。")])]),e._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[e._v("http：用于配置 Registry 的 HTTP 选项。")])]),e._v(" "),s("ul",[s("li",[e._v("http.addr：指定 Registry 监听的地址和端口。例如，:5000 表示监听所有接口的 5000 端口。")]),e._v(" "),s("li",[e._v("http.headers：可选配置，用于指定 HTTP 响应的自定义头部信息。")])]),e._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[e._v("auth：用于配置 Registry 的认证选项。")])]),e._v(" "),s("ul",[s("li",[e._v("auth.anonymous：指定是否允许匿名访问 Registry。设置为 true 表示允许匿名访问。")]),e._v(" "),s("li",[e._v("auth.htpasswd：可选配置，用于指定使用基于用户名和密码的认证。")]),e._v(" "),s("li",[e._v("auth.token：可选配置，用于指定使用访问令牌进行认证。")])]),e._v(" "),s("p",[e._v("这只是一些常见的配置选项示例。实际上，您可以根据您的需求自定义更多选项来配置您的私有 Docker Registry。")]),e._v(" "),s("p",[e._v("您可以参考 Registry 的官方文档或配置文件示例以获取更详细的配置选项和说明。")]),e._v(" "),s("h2",{attrs:{id:"访问-registry-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问-registry-api"}},[e._v("#")]),e._v(" 访问 Registry API")])])}),[],!1,null,null,null);r.default=a.exports}}]);