(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{594:function(s,t,a){"use strict";a.r(t);var n=a(41),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("blockquote",[a("p",[s._v("本文及后续所有文章都以 21.7.3.14-2 做为版本讲解和入门学习")])]),s._v(" "),a("h2",{attrs:{id:"整形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整形"}},[s._v("#")]),s._v(" 整形")]),s._v(" "),a("p",[s._v("固定长度的整型，包括 有符号 (+-) 整型或 无符号 (+) 整型。范围就是 -2"),a("sup",[s._v("(n-1)~2")]),s._v(" (n-1)-1，n 代表 位。"),a("br"),s._v("\nInt8 [-128 : 127] = byte(1) = 8bit"),a("br"),s._v("\nInt16 [-32768 : 32767] = short(2) = 16bit"),a("br"),s._v("\nInt32 [-2147483648 : 2147483648] = int(4) = 32bit"),a("br"),s._v("\nInt64 [-9223372036854775808 : 9223372036854775807] = long(8) = 64bit")]),s._v(" "),a("p",[s._v("无符号的整形范围是 0~2^(n-1)"),a("br"),s._v("\nUInt8 [0 : 255]"),a("br"),s._v("\nUInt16 [0 : 65535]"),a("br"),s._v("\nUInt32 [0 : 4294967295]"),a("br"),s._v("\nUInt64 [0 : 18446744073709551615]")]),s._v(" "),a("h2",{attrs:{id:"浮点型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点型"}},[s._v("#")]),s._v(" 浮点型")]),s._v(" "),a("p",[s._v("Float32 = float(4)"),a("br"),s._v("\nFloat64 = double(8)")]),s._v(" "),a("p",[s._v("建议尽可能以整数形式存储数据。例如，将固定精度的数字转换为整数值，如时间用毫秒为单位表示，因为浮点型进行计算时可能引起四舍五入的误差。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/img/ck/2/img.png",alt:""}})]),s._v(" "),a("p",[s._v("该类型使用场景：一般数据值比较小，不涉及大量的统计计算，精度要求不高的时候。比如保存商品的重量。")]),s._v(" "),a("h2",{attrs:{id:"布尔型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布尔型"}},[s._v("#")]),s._v(" 布尔型")]),s._v(" "),a("p",[s._v("没有单独的类型来存储布尔值。可以使用 UInt8 类型，取值限制为 0 或 1。")]),s._v(" "),a("h2",{attrs:{id:"decimal-型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#decimal-型"}},[s._v("#")]),s._v(" Decimal 型")]),s._v(" "),a("p",[s._v("有符号的浮点数，可在加、减和乘法运算过程中保持精度。对于除法，最低有效数字会被丢弃（不舍入）。"),a("br"),s._v("\nDecimal32 (s)，相当于 Decimal (9-s,s)，有效位数为 1~9"),a("br"),s._v("\nDecimal64 (s)，相当于 Decimal (18-s,s)，有效位数为 1~18"),a("br"),s._v("\nDecimal128 (s)，相当于 Decimal (38-s,s)，有效位数为 1~38")]),s._v(" "),a("p",[s._v("比如：12345.456223 让保留两位小数，Decimal64 (2) = Decimal (18-2,2) = Decimal (16,2) 小数点前保留 16 位，小数点后保留 2 位，12345.45。")]),s._v(" "),a("p",[s._v("s 标识小数位，该类型使用场景： 一般金额字段、汇率、利率等字段为了保证小数点精度，都使用 Decimal 进行存储。")]),s._v(" "),a("h2",{attrs:{id:"字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[s._v("#")]),s._v(" 字符串")]),s._v(" "),a("h3",{attrs:{id:"string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[s._v("#")]),s._v(" String")]),s._v(" "),a("p",[s._v("字符串可以任意长度的。它可以包含任意的字节集，包含空字节。")]),s._v(" "),a("h3",{attrs:{id:"fixedstring-n"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fixedstring-n"}},[s._v("#")]),s._v(" FixedString(N)")]),s._v(" "),a("p",[s._v("固定长度 N 的字符串，N 必须是严格的正自然数。当服务端读取长度小于 N 的字符串时候，通过在字符串末尾添加空字节来达到 N 字节长度。 当服务端读取长度大于 N 的字符串时候，将返回错误消息。")]),s._v(" "),a("p",[s._v("与 String 相比，极少会使用 FixedString，因为使用起来不是很方便。")]),s._v(" "),a("p",[s._v("该类型使用场景：名称、文字描述、字符型编码。 固定长度的可以保存一些定长的内容，比如一些编码，性别等但是考虑到一的变化风险，带来收益不够明显，所以定长字符串使用意义有限。")]),s._v(" "),a("h2",{attrs:{id:"枚举类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#枚举类型"}},[s._v("#")]),s._v(" 枚举类型")]),s._v(" "),a("p",[s._v("包括 Enum8 和 Enum16 类型。Enum 保存'string'= integer 的对应关系。"),a("br"),s._v("\nEnum8 用 'String'= Int8 对描述。"),a("br"),s._v("\nEnum16 用 'String'= Int16 对描述。")]),s._v(" "),a("p",[s._v("例如：创建一个带有一个枚举 Enum8 ('hello' = 1, 'world' = 2) 类型的列，并插入数据")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建表")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" t_enum "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    x Enum8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'world'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENGINE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" TinyLog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 插入数据")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" t_enum "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("img",{attrs:{src:"/assets/img/ck/2/img_1.png",alt:""}})]),s._v(" "),a("p",[s._v("这个 x 列只能存储类型定义中列出的值：'hello' 或 'world'，如果尝试保存任何其他值，ClickHouse 抛出异常。")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_enum "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"/assets/img/ck/2/img_2.png",alt:""}})]),s._v(" "),a("p",[s._v("如果需要看到对应行的数值，则必须将 Enum 值转换为整数类型。")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CAST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Int8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" t_enum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"/assets/img/ck/2/img_3.png",alt:""}})]),s._v(" "),a("p",[s._v("该类型使用场景：对一些状态、类型的字段算是一种空间优化，也算是一种数据约束。但是实际使用中往往因为一些数据内容的变化增加一定的维护成本，甚至是数据丢失问题。所以谨慎使用。")]),s._v(" "),a("h2",{attrs:{id:"时间类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间类型"}},[s._v("#")]),s._v(" 时间类型")]),s._v(" "),a("p",[s._v("目前 ClickHouse 有三种时间类型")]),s._v(" "),a("ul",[a("li",[s._v("Date 接受 年 - 月 - 日 的字符串比如 ‘2019-12-16’")]),s._v(" "),a("li",[s._v("Datetime 接受 年 - 月 - 日 时：分: 秒 的字符串比如 ‘2019-12-16 20:50:10’")]),s._v(" "),a("li",[s._v("Datetime64 接受 年 - 月 - 日 时：分: 秒。亚秒 的字符串比如‘2019-12-16 20:50:10.66’")])]),s._v(" "),a("p",[s._v("日期类型，用两个字节存储，表示从 1970-01-01 (无符号) 到当前的日期值。还有很多数据结构，可以参考官方文档：https://clickhouse.yandex/docs/zh/data_types/")]),s._v(" "),a("h2",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[s._v("#")]),s._v(" 数组")]),s._v(" "),a("p",[s._v("Array (T)：由 T 类型元素组成的数组。"),a("br"),s._v("\nT 可以是任意类型，包含数组类型。 但不推荐使用多维数组，ClickHouse 对多维数组的支持有限。例如，不能在 MergeTree 表中存储多维数组。")]),s._v(" "),a("p",[s._v("第一种创建数组的方式，as x，把数组起一个变量， toTypeName (x) 并打印出 x 变量的类型")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(" SELECT array(1, 2) AS x, toTypeName(x) ;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"/assets/img/ck/2/img_4.png",alt:""}})]),s._v(" "),a("p",[s._v("第二种创建数组的方式")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT \\[1, 2\\] AS x, toTypeName(x);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"/assets/img/ck/2/img_5.png",alt:""}})]),s._v(" "),a("p",[s._v("注意数字的元素只能是相同类型的，又是数字又是字符的话会报错。")]),s._v(" "),a("h2",{attrs:{id:"map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[s._v("#")]),s._v(" Map")]),s._v(" "),a("p",[s._v("Map (key, value) 数据类型存储 键：值 对，key 键，可以是 字符串、整数、LowCardinality 或 FixedString 类型，value 值，可以是字符串 (String)、整数 (Integer)、数组 (Array)、LowCardinality 或 FixedString 类型。")]),s._v(" "),a("p",[s._v("具体使用")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个表")]),s._v("\nCREATE TABLE table_map "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a Map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("String, UInt64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ENGINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Memory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 插入数据")]),s._v("\nINSERT INTO table_map VALUES "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'key1'")]),s._v(":1, "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'key2'")]),s._v(":10"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'key1'")]),s._v(":2,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'key2'")]),s._v(":20"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'key1'")]),s._v(":3,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'key2'")]),s._v(":30"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询")]),s._v("\nSELECT a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'key2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" FROM table_map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n┌─arrayElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a, "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'key2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("─┐\n│                      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" │\n│                      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" │\n│                      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v(" │\n└─────────────────────────┘\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("可以把元组转换为 Map")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("SELECT CAST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Ready'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Steady'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Go'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Map(UInt8, String)'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" AS map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n┌─map───────────────────────────┐\n│ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Ready'")]),s._v(",2:"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Steady'")]),s._v(",3:"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Go'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" │\n└───────────────────────────────┘\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("可以列出 Map 的所有 key 和 所有 value 值")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建表")]),s._v("\nCREATE TABLE t_map "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" Map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("String, UInt64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),s._v(" ENGINE "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Memory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 插入数据")]),s._v("\nINSERT INTO t_map VALUES "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'key1'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'key2'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'key3'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询所有键")]),s._v("\nSELECT a.keys FROM t_map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n┌─a.keys─────────────────┐\n│ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'key1'")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'key2'")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'key3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" │\n└────────────────────────┘\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询所有值")]),s._v("\nSELECT a.values FROM t_map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n┌─a.values─┐\n│ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1,2")]),s._v(",3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  │\n└──────────┘\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h2",{attrs:{id:"uuid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uuid"}},[s._v("#")]),s._v(" UUID")]),s._v(" "),a("p",[s._v("通用唯一标识符 (UUID) 是一个 16 字节的数字，用于标识记录。"),a("br"),s._v("\nUUID 类型值的示例如下:")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("61f0c404-5cb3-11e7-907b-a6006ad3dba0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果在插入新记录时未指定 UUID 列的值，则 UUID 值将用零填充:")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("00000000-0000-0000-0000-000000000000\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("要生成 UUID 值，ClickHouse 提供了 generateuidv4 函数。")]),s._v(" "),a("p",[s._v("具体使用")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个表")]),s._v("\nCREATE TABLE t_uuid "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x UUID, y String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ENGINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("TinyLog\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 插入数据生产随机UUID")]),s._v("\nINSERT INTO t_uuid SELECT generateUUIDv4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Example 1'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询")]),s._v("\nSELECT * FROM t_uuid\n┌────────────────────────────────────x─┬─y─────────┐\n│ 417ddc5d-e556-4d27-95dd-a34d84e46a50 │ Example "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" │\n└──────────────────────────────────────┴───────────┘\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不插入UUID值")]),s._v("\nINSERT INTO t_uuid "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" VALUES "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Example 2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询")]),s._v("\nSELECT * FROM t_uuid\n┌────────────────────────────────────x─┬─y─────────┐\n│ 417ddc5d-e556-4d27-95dd-a34d84e46a50 │ Example "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" │\n│ 00000000-0000-0000-0000-000000000000 │ Example "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" │\n└──────────────────────────────────────┴───────────┘\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("注意：UUID 数据类型只支持 字符串，该数据类型也支持 min，max，count 函数，但不支持 abs 或聚合函数 (sum，avg) 等。")])])}),[],!1,null,null,null);t.default=e.exports}}]);