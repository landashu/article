(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{598:function(s,a,t){"use strict";t.r(a);var n=t(41),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("blockquote",[t("p",[s._v("本文及后续所有文章都以 21.7.3.14-2 做为版本讲解和入门学习")])]),s._v(" "),t("h2",{attrs:{id:"表引擎的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表引擎的使用"}},[s._v("#")]),s._v(" 表引擎的使用")]),s._v(" "),t("p",[s._v("表引擎是 ClickHouse 的一大特色。可以说， 表引擎决定了如何存储表的数据。包括：")]),s._v(" "),t("ul",[t("li",[s._v("数据的存储方式和位置，写到哪里以及从哪里读取数据。")]),s._v(" "),t("li",[s._v("支持哪些查询以及如何支持。")]),s._v(" "),t("li",[s._v("并发数据访问。")]),s._v(" "),t("li",[s._v("索引的使用（如果存在）。")]),s._v(" "),t("li",[s._v("是否可以执行多线程请求。")]),s._v(" "),t("li",[s._v("数据复制参数。")])]),s._v(" "),t("p",[s._v("表引擎的使用方式就是必须显式在创建表时定义该表使用的引擎，以及引擎使用的相关参数。"),t("br"),s._v("\n注意：引擎的名称大小写敏感，都是以驼峰命名，且首字母注意是大写。")]),s._v(" "),t("h2",{attrs:{id:"tinylog"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tinylog"}},[s._v("#")]),s._v(" TinyLog")]),s._v(" "),t("p",[s._v("以列文件的形式保存在磁盘上，不支持索引，没有并发控制。一般保存少量数据的小表，生产环境上作用有限。可以用于平时练习测试用。一般用于一些简单的测试使用，生产环境不考虑。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("create table t_tinylog "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" String, name String"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("engine")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("TinyLog"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"memory"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#memory"}},[s._v("#")]),s._v(" Memory")]),s._v(" "),t("p",[s._v("内存引擎，数据以未压缩的原始形式直接保存在内存当中，服务器重启数据就会消失。读写操作不会相互阻塞，"),t("strong",[s._v("不支持索引")]),s._v("。简单查询下有非常非常高的性能表现（超过 10G/s）。")]),s._v(" "),t("p",[s._v("一般用到它的地方不多，除了用来测试，就是在需要非常高的性能，同时数据量又不太大（上限大概 1 亿行）的场景。")]),s._v(" "),t("h2",{attrs:{id:"mergetree"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mergetree"}},[s._v("#")]),s._v(" MergeTree")]),s._v(" "),t("p",[s._v("ClickHouse 中"),t("strong",[s._v("最强大的表引擎")]),s._v("当属 MergeTree（合并树）引擎及该系列（*MergeTree）中的其他引擎，"),t("strong",[s._v("支持索引和分区")]),s._v("，地位可以相当于 Mysql 的 innodb。而且基于 MergeTree，还衍生除了很多小弟，也是非常有特色的引擎。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 建表语句")]),s._v("\ncreate table t_order_mt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" UInt32,\n sku_id String,\n total_amount Decimal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16,2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n create_time Datetime\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" engine "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("MergeTree\n partition by toYYYYMMDD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("create_time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n primary key "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n order by "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id,sku_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 插入数据")]),s._v("\ninsert into t_order_mt values\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sku_001'")]),s._v(",1000.00,"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-06-01 12:00:00'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ,\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("102")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sku_002'")]),s._v(",2000.00,"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-06-01 11:00:00'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("102")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sku_004'")]),s._v(",2500.00,"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-06-01 12:00:00'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("102")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sku_002'")]),s._v(",2000.00,"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-06-01 13:00:00'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("102")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sku_002'")]),s._v(",12000.00,"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-06-01 13:00:00'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("102")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sku_002'")]),s._v(",600.00,"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-06-02 12:00:00'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询 ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from t_order_mt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n┌──id─┬─sku_id──┬─total_amount─┬─────────create_time─┐\n│ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("102")]),s._v(" │ sku_002 │       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("600.00")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-06-02 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(":00:00 │\n└─────┴─────────┴──────────────┴─────────────────────┘\n┌──id─┬─sku_id──┬─total_amount─┬─────────create_time─┐\n│ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v(" │ sku_001 │      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000.00")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-06-01 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(":00:00 │\n│ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("102")]),s._v(" │ sku_002 │      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000.00")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-06-01 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(":00:00 │\n│ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("102")]),s._v(" │ sku_002 │      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000.00")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-06-01 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":00:00 │\n│ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("102")]),s._v(" │ sku_002 │     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12000.00")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-06-01 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":00:00 │\n│ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("102")]),s._v(" │ sku_004 │      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2500.00")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-06-01 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(":00:00 │\n└─────┴─────────┴──────────────┴─────────────────────┘\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br")])]),t("p",[s._v("MergeTree 其实还有很多参数 (绝大多数用默认值即可)，但是三个参数是更加重要的，也涉及了关于 MergeTree 的很多概念。")]),s._v(" "),t("h3",{attrs:{id:"文件介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件介绍"}},[s._v("#")]),s._v(" 文件介绍")]),s._v(" "),t("p",[s._v("以上我们创建的表，他是一个文件夹，具体位置如下")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("/var/lib/clickhouse/data/system/t_order_mt\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("该 t_order_mt 文件夹下包含有如下文件")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("20200601_1_1_0  20200602_2_2_0  detached  format_version.txt\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("20200601_1_1_0 分区目录，PartitionId_MinBlocakNum_MaxBlockNum_Level"),t("br"),s._v("\nPartitionId 数据分区 ID 生成规则由分区 ID 决定，分区 ID 由 PARTITION BY 分区键决定。根据分区键字段类型，ID 生成规则可分为："),t("br"),s._v("\n-> 未定义分区键：没有定义 PARTITION BY ，默认生成一个目录名位 all 的数据分区，所有数据均放在 all 目录下。"),t("br"),s._v("\n-> 整型分区键：分区键为整型，那么直接用该整型值得字符串形式作为分区 ID。"),t("br"),s._v("\n-> 日期类分区键：分区键为日期类型，或者可以转换成日期类型。"),t("br"),s._v("\n-> 其他类型分区键：String、float 类型等，通过 128 位得 Hash 算法取其 Hash 值作为分区 ID。"),t("br"),s._v("\nMinBlocakNum：最小分区块编号，自增类型，从 1 开始向上递增。每产生一个新的目录分区就向上递增一个数字。"),t("br"),s._v("\nMaxBlockNum：最大分区块编号，新创建得分区 MinBlocakNum 等于 MaxBlockNum 得编号。"),t("br"),s._v("\nLevel：合并的层级，被合并的次数。合并次数越多，层级值越大。")]),s._v(" "),t("li",[s._v("detached  卸载，默认空的")]),s._v(" "),t("li",[s._v("format_version.txt 格式化版本，默认是 1")])]),s._v(" "),t("p",[s._v("再进入 20200601_1_1_0 文件夹，我们可以见到，如下几个文件")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("checksums.txt  columns.txt  count.txt  data.bin  data.mrk3  default_compression_codec.txt  minmax_create_time.idx  partition.dat  primary.idx\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("data.bin 数据文件，表里面的数据会在这里面，老版本会把每个字段拆开来 比如 id.bin,id.mrk3,name.bin,name.mrk3")]),s._v(" "),t("li",[s._v("data.mrk3 标记文件，标记文件在 idx 索引文件和 bin 数据文件之间起到桥梁作用。老版本以 mrk2 结尾的文件，表示该表启用了自适应索引间隔。")]),s._v(" "),t("li",[s._v("default_compression_codec.txt 压缩格式")]),s._v(" "),t("li",[s._v("count.txt 记录表的行数，如果合并，也会记录合并后的。")]),s._v(" "),t("li",[s._v("columns.txt 列的信息，记录列名和类型")]),s._v(" "),t("li",[s._v("checksums.txt 校验文件，用于校验各个文件的正确性。存放各个文件的 size 以及 hash 值")]),s._v(" "),t("li",[s._v("primary.idx 主键的索引文件，稀疏索引，用于加快查询效率")]),s._v(" "),t("li",[s._v("partition.dat 分区信息")]),s._v(" "),t("li",[s._v("minmax_create_time.idx  分区键的最大最小值")])]),s._v(" "),t("h3",{attrs:{id:"partition-by-分区-可选"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#partition-by-分区-可选"}},[s._v("#")]),s._v(" partition by 分区 (可选)")]),s._v(" "),t("h4",{attrs:{id:"作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[s._v("#")]),s._v(" 作用")]),s._v(" "),t("p",[s._v("学过 hive 的应该都不陌生，分区的目的主要是降低扫描的范围，优化查询速度。")]),s._v(" "),t("h4",{attrs:{id:"如果不填"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如果不填"}},[s._v("#")]),s._v(" 如果不填")]),s._v(" "),t("p",[s._v("只会使用一个分区，默认分区名称 all。")]),s._v(" "),t("h4",{attrs:{id:"分区目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分区目录"}},[s._v("#")]),s._v(" 分区目录")]),s._v(" "),t("p",[s._v("MergeTree 是以列文件 + 索引文件 + 表定义文件组成的，但是如果设定了分区那么这些文件就会保存到不同的分区目录中。")]),s._v(" "),t("h4",{attrs:{id:"并行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#并行"}},[s._v("#")]),s._v(" 并行")]),s._v(" "),t("p",[s._v("分区后，面对涉及跨分区的查询统计，ClickHouse 会以分区为单位并行处理。如果按时间分区推荐按 天 进行分区。")]),s._v(" "),t("h4",{attrs:{id:"数据写入与分区合并"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据写入与分区合并"}},[s._v("#")]),s._v(" 数据写入与分区合并")]),s._v(" "),t("p",[s._v("任何一个批次的数据写入都会产生一个临时分区，不会纳入任何一个已有的分区。写入后的某个时刻（大概 10-15 分钟后），ClickHouse 会自动执行合并操作（等不及也可以手动通过 optimize 执行），把临时分区的数据，合并到已有分区中。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对所有分区进行合并")]),s._v("\noptimize table xxxx final"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定分区合并")]),s._v("\noptimize table xxxx partition "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'20200601'")]),s._v(" final"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("执行了该语句，临时文件不会立马删除掉，等到一定的时间会自己删除掉。")]),s._v(" "),t("h3",{attrs:{id:"primary-key-主键-可选"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#primary-key-主键-可选"}},[s._v("#")]),s._v(" primary key 主键 (可选)")]),s._v(" "),t("p",[s._v("ClickHouse 中的主键，和其他数据库不太一样，"),t("strong",[s._v("它只提供了数据的一级索引，但是却不是唯一约束")]),s._v("。这就意味着是可以存在相同 primary key 的数据的。")]),s._v(" "),t("p",[s._v("主键的设定主要依据是查询语句中的 where 条件。")]),s._v(" "),t("p",[s._v("根据条件通过对主键进行某种形式的二分查找，能够定位到对应的 index granularity (索引粒度), 避免了全表扫描。")]),s._v(" "),t("p",[s._v("index granularity： 直接翻译的话就是索引粒度，指在稀疏索引中两个相邻索引对应数据的间隔。ClickHouse 中的 MergeTree 默认是 8192。官方不建议修改这个值，除非该列存在大量重复值，比如在一个分区中几万行才有一个不同数据。")]),s._v(" "),t("blockquote",[t("p",[s._v("在同一个分区中，列值重复，索引是重复创建还是用第一个创建？用第一个就不会有太多的重复索引，加大索引粒度毫无意义，如果是建立重复索引，如何区分重复值建立索引的区别？"),t("br"),s._v("\n答：会重复建立索引，加大索引粒度可以说是跨度。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/img/ck/3/img.png",alt:""}})]),s._v(" "),t("p",[s._v("稀疏索引的好处就是可以用很少的索引数据，定位更多的数据，代价就是只能定位到索引粒度的第一行，然后再进行进行一点扫描。")]),s._v(" "),t("h3",{attrs:{id:"order-by-必选"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#order-by-必选"}},[s._v("#")]),s._v(" order by（必选）")]),s._v(" "),t("p",[s._v("order by 设定了"),t("strong",[s._v("分区内")]),s._v("的数据按照哪些字段顺序进行有序保存。")]),s._v(" "),t("p",[s._v("order by 是 MergeTree 中唯一一个必填项，甚至比 primary key 还重要，因为当用户不设置主键的情况，很多处理会依照 order by 的字段进行处理（比如去重和汇总）。")]),s._v(" "),t("p",[s._v("要求：主键必须是 order by 字段的前缀字段。比如 order by 字段是 (id,sku_id) 那么主键必须是 id 或者 (id,sku_id)， 不能跳过前者用 sku_id。")]),s._v(" "),t("h3",{attrs:{id:"二级索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二级索引"}},[s._v("#")]),s._v(" 二级索引")]),s._v(" "),t("p",[s._v("目前在 ClickHouse 的官网上二级索引的功能在 v20.1.2.4 之前是被标注为实验性的，在这个版本之后默认是开启的。")]),s._v(" "),t("p",[s._v("老版本使用二级索引前需要增加设置，是否允许使用实验性的二级索引 (v20.1.24 开始，这个参数已被删除，默认开启)")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("set allow_experimental_data_skipping_indices=1;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("二级索引的使用，其中 GRANULARITY N 是设定二级索引对于一级索引粒度的粒度（跨度）。")]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/img/ck/3/img_1.png",alt:""}})]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("create table t_order_mt2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" UInt32,\n sku_id String,\n total_amount Decimal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16,2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n create_time Datetime,\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 二级索引 INDEX 命名 字段 TYPE minmax GRANULARITY 粒度N")]),s._v("\n INDEX a total_amount TYPE minmax GRANULARITY "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" engine "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("MergeTree\n partition by toYYYYMMDD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("create_time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n primary key "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n order by "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id, sku_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("该索引对于该分区下的文件名称为 skp_idx_a.mrk3 跳数索引")]),s._v(" "),t("h3",{attrs:{id:"数据-ttl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据-ttl"}},[s._v("#")]),s._v(" 数据 TTL")]),s._v(" "),t("p",[s._v("TTL 即 Time To Live，MergeTree 提供了可以管理数据表或者列的生命周期的功能。")]),s._v(" "),t("h4",{attrs:{id:"适用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#适用场景"}},[s._v("#")]),s._v(" 适用场景")]),s._v(" "),t("p",[s._v("数仓建设需要考虑数据的生命周期问题，数据的生命周期包括数据最初的写入，存储，处理，查询，归档和销毁几个基本的阶段。实际中数仓数据量的成倍增长，不但产生了巨大容量的存储，同时也造成管理的困难，更换存储方式和存储迁移对项目来讲都是需要考虑成本和风险的。clickhouse 这样的一个设计，可以有效处理解决数据有效的存储周期和销毁的问题。ck 的出现对数据存储的数仓的业务选型又添加一种选择。")]),s._v(" "),t("h4",{attrs:{id:"列级别ttl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列级别ttl"}},[s._v("#")]),s._v(" 列级别 TTL")]),s._v(" "),t("p",[s._v("TTL 所监控的列不能是 主键字段，类型必须是日期类型。interval 支持 second (秒)，minute (分)，hour (小时)，day (天)，week (周)，month (月)，quarter (季度)，year (年)")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表创建")]),s._v("\ncreate table t_order_mt3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" UInt32,\n sku_id String,\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# TTL 列名+interval 10 SECOND")]),s._v("\n total_amount Decimal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16,2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" TTL create_time + INTERVAL "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" SECOND,\n create_time Datetime\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" engine "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("MergeTree\npartition by toYYYYMMDD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("create_time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n primary key "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n order by "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id, sku_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#插入数据")]),s._v("\ninsert into t_order_mt3 values \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("106")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sku_001'")]),s._v(",1000.00,"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2021-10-29 17:01:00'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("107")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sku_002'")]),s._v(",2000.00,"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2021-10-29 17:01:00'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("110")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sku_003'")]),s._v(",600.00,"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2021-10-29 17:01:00'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询数据")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from t_order_mt3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n┌──id─┬─sku_id──┬─total_amount─┬─────────create_time─┐\n│ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("106")]),s._v(" │ sku_001 │      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000.00")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2021")]),s._v("-10-29 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(":13:50 │\n│ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("107")]),s._v(" │ sku_002 │      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000.00")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2021")]),s._v("-10-29 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(":13:50 │\n│ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("110")]),s._v(" │ sku_003 │       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("600.00")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2021")]),s._v("-10-29 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(":13:50 │\n└─────┴─────────┴──────────────┴─────────────────────┘\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等到了 15:14:00的时候可以手动执行合并，查看效果 到期后，指定的字段数据归 0，不合并不会变")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" sleep"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\noptimize table t_order_mt3 final"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from t_order_mt3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("h4",{attrs:{id:"表级别ttl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表级别ttl"}},[s._v("#")]),s._v(" 表级别 TTL")]),s._v(" "),t("p",[s._v("创建时指定 TTL")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("CREATE TABLE example_table\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    d DateTime,\n    a Int\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nENGINE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" MergeTree\nPARTITION BY toYYYYMM"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nORDER BY d\nTTL d + INTERVAL "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" MONTH "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("DELETE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n    d + INTERVAL "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" WEEK TO VOLUME "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aaa'")]),s._v(",\n    d + INTERVAL "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" WEEK TO DISK "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bbb'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("ul",[t("li",[s._v("DELETE - 删除过期的行（默认操作）;")]),s._v(" "),t("li",[s._v("TO DISK 'aaa' - 将数据片段移动到磁盘 aaa;")]),s._v(" "),t("li",[s._v("TO VOLUME 'bbb' - 将数据片段移动到卷 bbb.")]),s._v(" "),t("li",[s._v("GROUP BY - 聚合过期的行")])]),s._v(" "),t("p",[s._v("修改表的 TTL")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("alter table t_order_mt3 MODIFY TTL create_time + INTERVAL "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" SECOND"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("设置列过期做被聚合。列 x 包含每组行中的最大值，y 为最小值，d 为可能任意值。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("CREATE TABLE table_for_aggregation\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    d DateTime,\n    k1 Int,\n    k2 Int,\n    x Int,\n    y Int\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nENGINE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" MergeTree\nORDER BY "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k1, k2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nTTL d + INTERVAL "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" MONTH GROUP BY k1, k2 SET x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" max"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", y "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" min"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h2",{attrs:{id:"replacingmergetree"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#replacingmergetree"}},[s._v("#")]),s._v(" ReplacingMergeTree")]),s._v(" "),t("p",[s._v("ReplacingMergeTree 是 MergeTree 的一个变种，它得存储特性完全继承 MergeTree，只是多了一个"),t("strong",[s._v("去重")]),s._v("的功能。 尽管 MergeTree 可以设置主键，但是 primary key 其实没有唯一约束的功能。如果你想处理掉重复的数据，可以借助这个 ReplacingMergeTree。ReplacingMergeTree 不会根据 primary key 约束去重，只会根据 order by 去重。")]),s._v(" "),t("h3",{attrs:{id:"去重时机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#去重时机"}},[s._v("#")]),s._v(" 去重时机")]),s._v(" "),t("p",[s._v("数据的去重只会在合并的过程中出现。合并会在未知的时间在后台进行，所以你无法预先作出计划。有一些数据可能仍未被处理。")]),s._v(" "),t("h3",{attrs:{id:"去重范围"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#去重范围"}},[s._v("#")]),s._v(" 去重范围")]),s._v(" "),t("p",[s._v("如果表经过了分区，去重只会在分区内部进行去重，不能执行跨分区的去重。")]),s._v(" "),t("p",[s._v("所以 ReplacingMergeTree 能力有限， ReplacingMergeTree 适用于在后台清除重复的数据以节省空间，但是它不保证没有重复的数据出现")]),s._v(" "),t("h3",{attrs:{id:"具体操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#具体操作"}},[s._v("#")]),s._v(" 具体操作")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("create table t_order_rmt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" UInt32,\n sku_id String,\n total_amount Decimal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16,2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ,\n create_time Datetime\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" engine "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ReplacingMergeTree"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("create_time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n partition by toYYYYMMDD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("create_time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n primary key "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n order by "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id, sku_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("ReplacingMergeTree (create_time) 填入的参数为 依据 (版本) 字段，重复数据保留 依据 (版本) 字段值最大的。如果不填依据 (版本) 字段，默认按照插入顺序保留最后一条。")]),s._v(" "),t("h3",{attrs:{id:"结论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[s._v("#")]),s._v(" 结论")]),s._v(" "),t("p",[s._v("➢ 实际上是使用 order by 字段作为唯一键"),t("br"),s._v("\n➢ 去重不能跨分区"),t("br"),s._v("\n➢ 只有同一批插入（新版本）或合并分区时才会进行去重"),t("br"),s._v("\n➢ 认定重复的数据保留，版本字段值最大的"),t("br"),s._v("\n➢ 如果版本字段相同则按插入顺序保留最后一笔")]),s._v(" "),t("h2",{attrs:{id:"summingmergetree"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#summingmergetree"}},[s._v("#")]),s._v(" SummingMergeTree")]),s._v(" "),t("p",[s._v("对于不查询明细，只关心以维度进行汇总聚合结果的场景。如果只使用普通的 MergeTree 的话，无论是存储空间的开销，还是查询时临时聚合的开销都比较大。")]),s._v(" "),t("p",[s._v("ClickHouse 为了这种场景，提供了一种能够 “预聚合” 的引擎 SummingMergeTree")]),s._v(" "),t("h3",{attrs:{id:"建表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#建表"}},[s._v("#")]),s._v(" 建表")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("create table t_order_smt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" UInt32,\n sku_id String,\n total_amount Decimal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16,2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ,\n create_time Datetime\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" engine "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" SummingMergeTree"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("total_amount"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n partition by toYYYYMMDD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("create_time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n primary key "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n order by "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id,sku_id "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("SummingMergeTree (total_amount) 设置你想聚合的列，也可以填多个。会根据 order by 做类似 group by 一样。")]),s._v(" "),t("h3",{attrs:{id:"结论-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结论-2"}},[s._v("#")]),s._v(" 结论")]),s._v(" "),t("p",[s._v("➢ 分区内聚合，不在一个分区的数据不会被聚合"),t("br"),s._v("\n➢ 分片合并的时候才聚合"),t("br"),s._v("\n➢ 以 order by 的字段去重用作"),t("strong",[s._v("维度")]),s._v("列，对指定（必须是数值）字段做聚合汇总数据，如果不填，以所有 ** 非维度列（意思就是除 order by 以外）** 且为数字列的字段做汇总"),t("br"),s._v("\n➢ 其余字段取最早（最小）的数据"),t("br"),s._v("\n➢ 只有在同一批次插入（新版本）或分片合并时才会进行聚合。")]),s._v(" "),t("h3",{attrs:{id:"建议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#建议"}},[s._v("#")]),s._v(" 建议")]),s._v(" "),t("p",[s._v("设计聚合表的话，唯一键值、流水号可以去掉，所有字段全部是维度、度量或者时间戳。")]),s._v(" "),t("p",[s._v("在写 sql 的时候还是需要把 sum () 函数带上，因为可能会包含一些还没来得及聚合的临时明细。如果是要获取汇总值，还是需要使用 sum 进行聚合，这样效率会有一定的提高，但本身 ClickHouse 是列式存储的，效率提升有限，不会特别明显。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" sum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("total_amount"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" from "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("province_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("’’ and "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("create_date")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("‘xxx’\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"integrations-集成引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#integrations-集成引擎"}},[s._v("#")]),s._v(" integrations 集成引擎")]),s._v(" "),t("h3",{attrs:{id:"mysql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[s._v("#")]),s._v(" MYSQL")]),s._v(" "),t("p",[s._v("MySQL 引擎允许您对存储在远程 MySQL 服务器上的数据执行 SELECT 和 INSERT 查询."),t("br"),s._v("\n 语法")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("CREATE TABLE "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("IF NOT EXISTS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("db."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("table_name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ON CLUSTER cluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    name1 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("type1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("DEFAULT"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("MATERIALIZED"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("ALIAS expr1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("TTL expr1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n    name2 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("type2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("DEFAULT"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("MATERIALIZED"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("ALIAS expr2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("TTL expr2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ENGINE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" MySQL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'host:port'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'database'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'table'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'user'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'password'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(", replace_query, "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'on_duplicate_clause'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nSETTINGS\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("connection_pool_size"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("connection_max_tries"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("connection_wait_timeout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" /* "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -- "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" not "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v(" */\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("connection_auto_close"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("ul",[t("li",[s._v("host:port 数据库连接的 IP 和端口")]),s._v(" "),t("li",[s._v("database 要选择的库")]),s._v(" "),t("li",[s._v("table 对应选择库里的表")]),s._v(" "),t("li",[s._v("user  MYSQL 用户名")]),s._v(" "),t("li",[s._v("password  MYSQL 密码")]),s._v(" "),t("li",[s._v("replace_query")]),s._v(" "),t("li",[s._v("on_duplicate_clause")])]),s._v(" "),t("p",[s._v("其中引擎支持可以用 | 查询多个不同的")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("CREATE TABLE test_replicas "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id UInt32, name String, age UInt32, money UInt32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ENGINE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" MySQL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("mysql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(":3306"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'clickhouse'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test_replicas'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'clickhouse'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("先在 mysql 中创建表")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("mysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" CREATE TABLE "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("int_id"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" INT NOT NULL AUTO_INCREMENT,\n    -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("int_nullable"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" INT NULL DEFAULT NULL,\n    -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("float"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" FLOAT NOT NULL,\n    -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("float_nullable"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" FLOAT NULL DEFAULT NULL,\n    -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   PRIMARY KEY "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("int_id"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nQuery OK, "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" rows affected "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,09")]),s._v(" sec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nmysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" insert into "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("int_id"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(", "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("float"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" VALUES "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1,2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nQuery OK, "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" row affected "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,00")]),s._v(" sec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nmysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n+------+----------+-----+----------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" int_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" int_nullable "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" float "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" float_nullable "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+------+----------+-----+----------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("         NULL "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("           NULL "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+------+----------+-----+----------+\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" row "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,00")]),s._v(" sec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[s._v("在 clickhouse 创建对 MySQL 的映射")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("CREATE TABLE mysql_table\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("float_nullable"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" Nullable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Float32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("int_id"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" Int32\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nENGINE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" MySQL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'localhost:3306'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bayonet'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询")]),s._v("\nSELECT * FROM mysql_table\n┌─float_nullable─┬─int_id─┐\n│           ᴺᵁᴸᴸ │      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" │\n└────────────────┴────────┘\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h3",{attrs:{id:"jdbc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdbc"}},[s._v("#")]),s._v(" JDBC")]),s._v(" "),t("p",[s._v("语法")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("CREATE TABLE "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("IF NOT EXISTS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("db."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("table_name\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    columns list"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nENGINE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" JDBC"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("datasource_uri, external_database, external_table"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[s._v("datasource_uri 外部 DBMS 的 URI 或名称")]),s._v(" "),t("li",[s._v("external_database  外部 DBMS 中的数据库")]),s._v(" "),t("li",[s._v("external_table external_database 中表的名称或可以直接写查询语句，如 select * from table1 where column1=1。")])]),s._v(" "),t("p",[s._v("可以在 mysql 中先创建表和数据")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("mysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" CREATE TABLE "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("int_id"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" INT NOT NULL AUTO_INCREMENT,\n    -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("int_nullable"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" INT NULL DEFAULT NULL,\n    -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("float"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" FLOAT NOT NULL,\n    -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("float_nullable"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" FLOAT NULL DEFAULT NULL,\n    -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   PRIMARY KEY "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("int_id"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nQuery OK, "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" rows affected "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,09")]),s._v(" sec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nmysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" insert into "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("int_id"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(", "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("float"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" VALUES "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1,2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nQuery OK, "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" row affected "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,00")]),s._v(" sec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nmysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n+------+----------+-----+----------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" int_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" int_nullable "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" float "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" float_nullable "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+------+----------+-----+----------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("         NULL "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("           NULL "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+------+----------+-----+----------+\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" row "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,00")]),s._v(" sec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[s._v("在 clickhouse 创建映射")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("CREATE TABLE jdbc_table\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("int_id"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" Int32,\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("int_nullable"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" Nullable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Int32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("float"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" Float32,\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("float_nullable"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" Nullable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Float32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nENGINE JDBC"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jdbc:mysql://localhost:3306/?user=root&password=root'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询")]),s._v("\nSELECT * FROM jdbc_table\n┌─int_id─┬─int_nullable─┬─float─┬─float_nullable─┐\n│      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" │         ᴺᵁᴸᴸ │     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" │           ᴺᵁᴸᴸ │\n└────────┴──────────────┴───────┴────────────────┘\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以从其他表插入数据到 jdbc_table")]),s._v("\nINSERT INTO jdbc_table"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("int_id"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(", "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("float"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nSELECT toInt32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", toFloat32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number * "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nFROM system.numbers\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h3",{attrs:{id:"kafka"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kafka"}},[s._v("#")]),s._v(" KAFKA")]),s._v(" "),t("p",[s._v("语法以及可选参数")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("CREATE TABLE "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("IF NOT EXISTS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("db."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("table_name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ON CLUSTER cluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    name1 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("type1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("DEFAULT"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("MATERIALIZED"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("ALIAS expr1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n    name2 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("type2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("DEFAULT"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("MATERIALIZED"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("ALIAS expr2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ENGINE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Kafka"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nSETTINGS\n    kafka_broker_list "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'host:port'")]),s._v(",\n    kafka_topic_list "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'topic1,topic2,...'")]),s._v(",\n    kafka_group_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'group_name'")]),s._v(",\n    kafka_format "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'data_format'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(","),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("kafka_row_delimiter "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'delimiter_symbol'")]),s._v(","),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("kafka_schema "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(","),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("kafka_num_consumers "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" N,"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("kafka_max_block_size "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(","),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("kafka_skip_broken_messages "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" N,"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("kafka_commit_every_batch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(","),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("kafka_thread_per_consumer "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("ul",[t("li",[s._v("kafka_broker_list kafka 地址，可以用逗号分隔多个地址 (127.0.0.1:9092,127.0.0.2:9092,127.0.0.3:9092)")]),s._v(" "),t("li",[s._v("kafka_topic_list  可以有多个 topic")]),s._v(" "),t("li",[s._v("kafka_group_name 组名称")]),s._v(" "),t("li",[s._v("kafka_format  消息格式，可以查看这个地址 https://clickhouse.com/docs/en/interfaces/formats/")]),s._v(" "),t("li",[s._v("kafka_row_delimiter  以什么符号来结束消息的接收")]),s._v(" "),t("li",[s._v("kafka_schema")]),s._v(" "),t("li",[s._v("kafka_num_consumers 消费者的数量，默认 1。消费者总数不应超过主题的分区数，每个分区只能分配一个消费者。")]),s._v(" "),t("li",[s._v("kafka_max_block_size  poll 一次消息可拉取的大小")]),s._v(" "),t("li",[s._v("kafka_skip_broken_messages  Kafka 消息解析器对每个块的模式不兼容消息的容忍度。默认值：0。如果 kafka_skip_broken_messages = N，那么引擎会跳过 N 条无法解析的 Kafka 消息（一条消息等于一行数据）")]),s._v(" "),t("li",[s._v("kafka_commit_every_batch  提交消息批次（默认值：0）")]),s._v(" "),t("li",[s._v("kafka_thread_per_consumer 为每个消费者提供独立的线程（默认值：0）。启用后，每个消费者独立地、并行地刷新数据（否则来自多个消费者的数据被挤压形成阻塞）")])]),s._v(" "),t("p",[s._v("具体使用")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("  CREATE TABLE queue "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    timestamp UInt64,\n    level String,\n    message String\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ENGINE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Kafka"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'localhost:9092'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'topic'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'group1'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'JSONEachRow'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  SELECT * FROM queue LIMIT "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  CREATE TABLE queue2 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    timestamp UInt64,\n    level String,\n    message String\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ENGINE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Kafka SETTINGS kafka_broker_list "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'localhost:9092'")]),s._v(",\n                            kafka_topic_list "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'topic'")]),s._v(",\n                            kafka_group_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'group1'")]),s._v(",\n                            kafka_format "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'JSONEachRow'")]),s._v(",\n                            kafka_num_consumers "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  CREATE TABLE queue3 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    timestamp UInt64,\n    level String,\n    message String\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ENGINE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Kafka"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'localhost:9092'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'topic'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'group1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n              SETTINGS kafka_format "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'JSONEachRow'")]),s._v(",\n                       kafka_num_consumers "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])]),t("h3",{attrs:{id:"hdfs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hdfs"}},[s._v("#")]),s._v(" HDFS")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("CREATE TABLE hdfs_engine_table "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name String, value UInt32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ENGINE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("HDFS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hdfs://hdfs1:9000/other_storage'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'TSV'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 插入")]),s._v("\nINSERT INTO hdfs_engine_table VALUES "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'one'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'two'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'three'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询 ")]),s._v("\nSELECT * FROM hdfs_engine_table LIMIT "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n┌─name─┬─value─┐\n│ one  │     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" │\n│ two  │     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" │\n└──────┴───────┘\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("blockquote",[t("p",[s._v("文档地址 https://clickhouse.com/docs/en/engines/table-engines/integrations/jdbc/")])])])}),[],!1,null,null,null);a.default=e.exports}}]);