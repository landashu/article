(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{516:function(s,a,n){"use strict";n.r(a);var e=n(41),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"一级缓存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一级缓存"}},[s._v("#")]),s._v(" 一级缓存")]),s._v(" "),n("p",[s._v("首先需要在 application.yml 中进行配置")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("mybatis-plus:\n  # 指定具体xml路径 全路径\n  mapper-locations: classpath*:/com/fengqianrun/mybatisplus/**/*Mapper.xml\n  # 设置实体路径位置\n  type-aliases-package: com.fengqianrun.mybatisplus.bean\n  configuration:\n    # 开启一级缓存,默认是开启的\n    local-cache-scope: SESSION\n  GlobalConfig:\n    # 关闭 banner 效果\n    banner: false\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("其次在查询方法上使用注解 @Transactional，@Transactional 代表就像一个 session，我们在这里面重复执行查询，就只会查询一次")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Transactional\n@GetMapping("/testOne")\npublic UserBean testOne(){\n    UserBean userBean = cacheOneMapper.testOne();\n    userBean = null;\n    userBean = cacheOneMapper.testOne();\n    return userBean;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h2",{attrs:{id:"二级缓存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二级缓存"}},[s._v("#")]),s._v(" 二级缓存")]),s._v(" "),n("p",[s._v("首先，在 application.yml 配置文件中添加如下配置：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("mybatis-plus:\n  configuration:\n    # 开启二级缓存\n    cache-enabled: true\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("必须实现要给对象进行 Serializable，例如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Data\n@TableName("user")\npublic class UserBean implements Serializable {\n    // ...\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("最后，需要在 Mapper 接口中使用 @CacheNamespace ，使用该注解可以方便地为每个 Mapper 接口定义独立的缓存空间，并指定不同的缓存实现和缓存策略，从而更好地控制缓存效果。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@Mapper\n@CacheNamespace(eviction = FifoCache.class)\npublic interface CacheTwoMapper extends BaseMapper<UserBean> {\n    List<UserBean> testAll();\n    UserBean testOne();\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("但如果 Mapper 接口有对应的 XML，则需要在 XML 描述 cache，使用注解 @CacheNamespace 就会失效，两个一起存在就会报错")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<mapper namespace="com.fengqianrun.mybatisplus.cache2.CacheTwoMapper">\n    <cache eviction="fifo"/>\n    <select id="testAll" resultType="com.fengqianrun.mybatisplus.bean.UserBean">\n        select * from user\n    </select>\n    <select id="testOne" resultType="com.fengqianrun.mybatisplus.bean.UserBean">\n        select * from user where id = 1\n    </select>\n</mapper>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("二级缓存默认情况下是使用  "),n("code",[s._v("MyBatis")]),s._v("  自带的  "),n("code",[s._v("PerpetualCache")]),s._v("  实现，可以通过配置文件中的属性来设置缓存实现类和其他参数。另外，在使用二级缓存时，"),n("br"),s._v("\n需要注意避免数据并发更新导致脏数据的问题，可以通过设置缓存刷新时间等方式来解决这个问题。")]),s._v(" "),n("h2",{attrs:{id:"自定义缓存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自定义缓存"}},[s._v("#")]),s._v(" 自定义缓存")]),s._v(" "),n("p",[s._v("如果你是但应用程序的话，使用以上的配置方式没有问题，但如果你是分布式或微服务，那么就会造成数据不一致的问题，此时我们需要借助其他缓存，比如 Redis 来缓存我们的查询数据。自定义缓存也只是在二级缓存基础上的改造，所以规则和二级缓存一样。")]),s._v(" "),n("p",[s._v("实现  "),n("code",[s._v("org.apache.ibatis.cache.Cache")]),s._v("  类")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('public class MyCache implements Cache {\n\n    /**\n     * id 会是 mapper 接口的名称\n     */\n    private final String id;\n\n    /**\n     * 可以替换为 Redis\n     */\n    private Map<Object, Object> cache = new ConcurrentHashMap<Object, Object>();\n\n    public MyCache(String id) {\n        this.id = id;\n    }\n\n    /**\n     * 缓存唯一标识\n     * @return\n     */\n    @Override\n    public String getId() {\n        return id;\n    }\n\n    /**\n     * 将键值对放入缓存中\n     * @param key\n     * @param value\n     */\n    @Override\n    public void putObject(Object key, Object value) {\n        System.out.println("添加-自定义缓存: "+key+"  "+value);\n        cache.put(key, value);\n    }\n\n    /**\n     * 从缓存中获取指定键的值\n     * @param key\n     */\n    @Override\n    public Object getObject(Object key) {\n        System.out.println("查询-自定义缓存: "+key);\n        return cache.get(key);\n    }\n\n    /**\n     * 从缓存中移除指定键的值\n     * @param key\n     */\n    @Override\n    public Object removeObject(Object key) {\n        return cache.remove(key);\n    }\n\n    /**\n     * 清空缓存\n     */\n    @Override\n    public void clear() {\n        cache.clear();\n    }\n\n    /**\n     * 获取缓存中键值对的数量\n     * @return\n     */\n    @Override\n    public int getSize() {\n        return cache.size();\n    }\n\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br")])]),n("p",[s._v("具体的 mapper")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Mapper\n@CacheNamespace(implementation = MyCache.class,eviction = FifoCache.class)\npublic interface CacheThreeMapper extends BaseMapper<UserBean> {\n\n    @Select("select * from user")\n    List<UserBean> testAll();\n\n    @Select("select * from user where id = 1")\n    UserBean testOne();\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("blockquote",[n("p",[s._v("我们还可以在 mapper 接口上加  @CacheNamespaceRef 注解，当我们在一个 Mapper 接口中需要使用其他 Mapper 接口所定义的缓存时，可以通过 @CacheNamespaceRef 注解来实现。该注解用于指定另一个 Mapper 接口的 Class 对象，表示当前 Mapper 接口需要引用该接口所定义的缓存命名空间。@CacheNamespaceRef (XXXXXMapper.class)")])])])}),[],!1,null,null,null);a.default=t.exports}}]);