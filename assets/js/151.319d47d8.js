(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{629:function(s,a,t){"use strict";t.r(a);var n=t(41),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("blockquote",[t("p",[s._v("本文及后续所有文章都以 1.8.0 做为版本讲解和入门学习")])]),s._v(" "),t("h2",{attrs:{id:"avro-类型的-source"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#avro-类型的-source"}},[s._v("#")]),s._v(" avro 类型的 source")]),s._v(" "),t("p",[s._v("监听 Avro 端口来接收外部 avro 客户端的事件流。和 netcat 不同的是，avro-source 接收到的是经过 avro 序列化后的数据，然后反序列化数据继续传输。所以，如果是 avro-source 的话，源数据必须经过 avro 序列化后的数据。而 netcat 接收的是字符串格式。")]),s._v(" "),t("p",[s._v("利用 avro source 可以实现多级流动、扇出流、扇入流等效果，另外，也可以接收通过 flume 提供的 avro 客户端发送的日志信息。")]),s._v(" "),t("h3",{attrs:{id:"avro-source配置说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#avro-source配置说明"}},[s._v("#")]),s._v(" avro source 配置说明")]),s._v(" "),t("p",[s._v("在 /opt/software/flume-1.8.0/conf 下创建 source-avro.conf")]),s._v(" "),t("div",{staticClass:"language-properties line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a1 代表一个flume 给每个组件匿名")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("r1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.channels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("s1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定source 的数据来源以及堆外开放的端口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("avro")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.bind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("node113")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("8888")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定a1的channels基于内存")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.channels.c1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("memory")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定a1的sinks 输出到控制台")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks.s1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("logger")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定a1 sources和channle 的关系")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.channels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定a1 sinks 和 channel 的关系")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks.s1.channel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h3",{attrs:{id:"启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[s._v("#")]),s._v(" 启动")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("flume-ng agent -n a1 -c /opt/software/flume-1.8.0/conf -f /opt/software/flume-1.8.0/conf/source-avro.conf -Dflume.root.logger=INFO,console\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[s._v("#")]),s._v(" 测试")]),s._v(" "),t("p",[s._v("在 node103 的 flume 执行命令，把配置文件发过去")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("./flume-ng avro-client -H node113 -p 8888 -F /opt/software/flume-1.8.0/conf/source-avro.conf -c /opt/software/flume-1.8.0/conf/\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("node113 接收会打印")]),s._v(" "),t("h2",{attrs:{id:"exec-类型的-source"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exec-类型的-source"}},[s._v("#")]),s._v(" exec 类型的 source")]),s._v(" "),t("p",[s._v("可以将命令产生的输出做为源")]),s._v(" "),t("h3",{attrs:{id:"exec-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exec-配置"}},[s._v("#")]),s._v(" exec 配置")]),s._v(" "),t("p",[s._v("在 /opt/software/flume-1.8.0/conf 下创建 source-exec.conf"),t("br"),s._v("\n 将 type 改成 exec，并添加 command 命令，会执行命令做为 source 的数据源。")]),s._v(" "),t("div",{staticClass:"language-properties line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a1 代表一个flume 给每个组件匿名")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("r1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.channels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("s1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("exec")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("ping node103")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定a1的channels基于内存")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.channels.c1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("memory")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定a1的sinks 输出到控制台")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks.s1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("logger")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定a1 sources和channle 的关系")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.channels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定a1 sinks 和 channel 的关系")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks.s1.channel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("h2",{attrs:{id:"spooling-directory-类型的-source"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spooling-directory-类型的-source"}},[s._v("#")]),s._v(" spooling directory 类型的 source")]),s._v(" "),t("p",[s._v('将指定得文件加入到 "自动搜集" 目录中。flume 会持续监听这个目录，把文件当作 source 来处理。注意：一旦文件被放到 “自动收集” 目录中，便不能修改，如果修改，flume 会报错。此外，他不能有重名的文件，否则也会报错。')]),s._v(" "),t("p",[s._v("当一个文件被 flume 读了以后，会在末尾 添加 .COMPLETED 标识")]),s._v(" "),t("h3",{attrs:{id:"spooling-directory-配置-source"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spooling-directory-配置-source"}},[s._v("#")]),s._v(" spooling directory 配置 source")]),s._v(" "),t("p",[s._v("在 /opt/software/flume-1.8.0/conf 下创建 source-spooldir.conf")]),s._v(" "),t("div",{staticClass:"language-properties line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a1 代表一个flume 给每个组件匿名")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("r1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.channels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("s1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("spooldir")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 目录需要提前建立")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.spoolDir")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("/home/data")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定a1的channels基于内存")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.channels.c1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("memory")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定a1的sinks 输出到控制台")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks.s1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("logger")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定a1 sources和channle 的关系")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.channels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定a1 sinks 和 channel 的关系")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks.s1.channel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h2",{attrs:{id:"sequence-generator-source-序列发生源-类型的-source"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sequence-generator-source-序列发生源-类型的-source"}},[s._v("#")]),s._v(" sequence generator source (序列发生源) 类型的 source")]),s._v(" "),t("p",[s._v("一个简单的序列发生器，不断的产生事件，值是从 0 开始每次递增 1. 主要用来测试。测试消费能力。")]),s._v(" "),t("h3",{attrs:{id:"spooling-directory-配置-source-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spooling-directory-配置-source-2"}},[s._v("#")]),s._v(" spooling directory 配置 source")]),s._v(" "),t("p",[s._v("在 /opt/software/flume-1.8.0/conf 下创建 source-seq.conf")]),s._v(" "),t("div",{staticClass:"language-properties line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a1 代表一个flume 给每个组件匿名")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("r1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.channels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("s1")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("seq")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定a1的channels基于内存")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.channels.c1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("memory")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定a1的sinks 输出到控制台")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks.s1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("logger")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定a1 sources和channle 的关系")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.channels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定a1 sinks 和 channel 的关系")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks.s1.channel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h2",{attrs:{id:"http-类型的-source"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-类型的-source"}},[s._v("#")]),s._v(" http 类型的 source")]),s._v(" "),t("p",[s._v("此 source 接受 htpp 的 get 和 post 请求做为 f lume 的事件。其中 get 方式应该只用于试验。")]),s._v(" "),t("p",[s._v("如果想让 flume 正确解析 http 协议信息，比如解析出请求头、请求体等信息，需要提供一个可插拔的 “处理器” 来将请求转换为事件对象，这个处理器必须实现 HTTPSourceHandler 接口。")]),s._v(" "),t("p",[s._v("这个处理器接受一个 HttpServletRequest 对象，并返回一个 Flume Event 对象集合。")]),s._v(" "),t("p",[s._v("Flume 提供了一些常用的 Handler（处理器）。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("JSONHandler")]),t("br"),s._v("\n 可以处理 JSON 格式的数据，并支持 UTF-8 UTF-16 UTF-32 字符集，该 handler 接受 Event 数组，并根据请求头中的编码将其转换位 Flume Event，如果没有指定的编码，默认编码为 UTF-8.")])]),s._v(" "),t("h3",{attrs:{id:"spooling-directory-配置-source-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spooling-directory-配置-source-3"}},[s._v("#")]),s._v(" spooling directory 配置 source")]),s._v(" "),t("p",[s._v("在 /opt/software/flume-1.8.0/conf 下创建 source-http.conf")]),s._v(" "),t("div",{staticClass:"language-properties line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a1 代表一个flume 给每个组件匿名")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("r1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.channels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("s1")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("http")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.bind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("node113")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("8888")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定a1的channels基于内存")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.channels.c1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("memory")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定a1的sinks 输出到控制台")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks.s1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("logger")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定a1 sources和channle 的关系")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.channels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定a1 sinks 和 channel 的关系")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks.s1.channel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h3",{attrs:{id:"启动测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动测试"}},[s._v("#")]),s._v(" 启动测试")]),s._v(" "),t("p",[s._v("启动")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("flume-ng agent -n a1 -c /opt/software/flume-1.8.0/conf -f /opt/software/flume-1.8.0/conf/source-http.conf -Dflume.root.logger"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("INFO,console\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("测试，从 node103 发送数据")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -X POST -d "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'[{"headers":{"text":"hello wold"},"body":"hello hello"}]\'')]),s._v(" http://node113:8888\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("node113 接收数据")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2021")]),s._v("-05-17 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":37:23,102 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SinkRunner-PollingRunner-DefaultSinkProcessor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("INFO - org.apache.flume.sink.LoggerSink.process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LoggerSink.java:95"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Event: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" headers:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("text"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("hello wold"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" body: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("68")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65")]),s._v(" 6C 6C 6F "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("68")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65")]),s._v(" 6C 6C 6F                hello hello "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"kafka-类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kafka-类型"}},[s._v("#")]),s._v(" Kafka 类型")]),s._v(" "),t("p",[s._v("flume-kafka-source 是 flume 内置的 kafka source 数据组件，是为了拉取 kafka 数据。flume-kafka-source 的 offset 是交由 zk 集群去维护 offset。")]),s._v(" "),t("p",[s._v("flume 属于单线程拉取数据并将数据发送内置 channel 并通过 sink 组件进行数据转发和处理，故对于 kafka 集群多副本方式拉取数据的时候，应适当考虑多个 flume 节点拉取 kafka 多副本数据，以避免 flume 节点在多个 kafka 集群副本中轮询。加大 flume 拉取 kafka 数据的速率。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("属性")]),s._v(" "),t("th",[s._v("默认值")]),s._v(" "),t("th",[s._v("描述")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("strong",[s._v("channels")])]),s._v(" "),t("td",[s._v("–")]),s._v(" "),t("td",[s._v("配置的 channels 可配置多个 channels 后续文章会说到")])]),s._v(" "),t("tr",[t("td",[t("strong",[s._v("type")])]),s._v(" "),t("td",[s._v("–")]),s._v(" "),t("td",[s._v("org.apache.flume.source.kafka.KafkaSource")])]),s._v(" "),t("tr",[t("td",[t("strong",[s._v("kafka.bootstrap.servers")])]),s._v(" "),t("td",[s._v("–")]),s._v(" "),t("td",[s._v("配置 kafka 集群地址")])]),s._v(" "),t("tr",[t("td",[s._v("kafka.consumer.group.id")]),s._v(" "),t("td",[s._v("flume")]),s._v(" "),t("td",[s._v("唯一确定的消费者群体。 在多个源或代理中设置相同的 ID 表示它们是同一个使用者组的一部分")])]),s._v(" "),t("tr",[t("td",[t("strong",[s._v("kafka.topics")])]),s._v(" "),t("td",[s._v("–")]),s._v(" "),t("td",[s._v("你需要消费的 topic")])]),s._v(" "),t("tr",[t("td",[t("strong",[s._v("kafka.topics.regex")])]),s._v(" "),t("td",[s._v("–")]),s._v(" "),t("td",[s._v("正则表达式，用于定义源订阅的主题集。 此属性的优先级高于 "),t("code",[s._v("kafka.topics")]),s._v(" ，如果存在则覆盖 "),t("code",[s._v("kafka.topics")]),s._v(" 。")])]),s._v(" "),t("tr",[t("td",[s._v("batchSize")]),s._v(" "),t("td",[s._v("1000")]),s._v(" "),t("td",[s._v("一批中写入 Channel 的最大消息数 （优化项）")])]),s._v(" "),t("tr",[t("td",[s._v("batchDurationMillis")]),s._v(" "),t("td",[s._v("1000")]),s._v(" "),t("td",[s._v("将批次写入通道之前的最长时间（以毫秒为单位）只要达到第一个大小和时间，就会写入批次。（优化项）")])]),s._v(" "),t("tr",[t("td",[s._v("backoffSleepIncrement")]),s._v(" "),t("td",[s._v("1000")]),s._v(" "),t("td",[s._v("Kafka 主题显示为空时触发的初始和增量等待时间。 等待时间将减少对空 "),t("code",[s._v("kafka")]),s._v("  主题的激进 ping 操作。 一秒钟是摄取用例的理想选择，但使用拦截器的低延迟操作可能需要较低的值。")])]),s._v(" "),t("tr",[t("td",[s._v("maxBackoffSleep")]),s._v(" "),t("td",[s._v("5000")]),s._v(" "),t("td",[s._v("Kafka 主题显示为空时触发的最长等待时间。 5 秒是摄取用例的理想选择，但使用拦截器的低延迟操作可能需要较低的值。")])]),s._v(" "),t("tr",[t("td",[s._v("useFlumeEventFormat")]),s._v(" "),t("td",[s._v("false")]),s._v(" "),t("td",[s._v("默认情况下，事件从 Kafka 主题直接作为字节直接进入事件主体。 设置为 true 以将事件读取为 Flume Avro 二进制格式。 与 KafkaSink 上的相同属性或 Kafka Channel 上的 parseAsFlumeEvent 属性一起使用时，这将保留在生成端发送的任何 Flume 标头。")])]),s._v(" "),t("tr",[t("td",[s._v("setTopicHeader")]),s._v(" "),t("td",[s._v("true")]),s._v(" "),t("td",[s._v("设置为 true 时，将检索到的消息的主题存储到标题中，该标题由 "),t("code",[s._v("topicHeader")]),s._v("  属性定义。")])]),s._v(" "),t("tr",[t("td",[s._v("topicHeader")]),s._v(" "),t("td",[s._v("topic")]),s._v(" "),t("td",[s._v("如果 "),t("code",[s._v("setTopicHeader")]),s._v("  属性设置为 "),t("code",[s._v("true")]),s._v(" ，则定义用于存储接收消息主题名称的标题的名称。 如果与 Kafka Sink "),t("code",[s._v("topicHeader")]),s._v("  属性结合使用，应该小心，以避免在循环中将消息发送回同一主题。")])]),s._v(" "),t("tr",[t("td",[s._v("migrateZookeeperOffsets")]),s._v(" "),t("td",[s._v("true")]),s._v(" "),t("td",[s._v("如果找不到 Kafka 存储的偏移量，请在 Zookeeper 中查找偏移量并将它们提交给 Kafka。 这应该是支持从旧版本的 Flume 无缝 Kafka 客户端迁移。 迁移后，可以将其设置为 false，但通常不需要这样做。 如果未找到 Zookeeper 偏移量，则 Kafka 配置 kafka.consumer.auto.offset.reset 定义如何处理偏移量。 查看 [Kafka 文档]（"),t("a",{attrs:{href:"http://kafka.apache.org/documentation.html#newconsumerconfigs%EF%BC%89%E4%BA%86%E8%A7%A3%E8%AF%A6%E7%BB%86%E4%BF%A1%E6%81%AF",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://kafka.apache.org/documentation.html#newconsumerconfigs）了解详细信息"),t("OutboundLink")],1)])]),s._v(" "),t("tr",[t("td",[s._v("kafka.consumer.security.protocol")]),s._v(" "),t("td",[s._v("PLAINTEXT")]),s._v(" "),t("td",[s._v("如果使用某种级别的安全性写入 Kafka，则设置为 SASL_PLAINTEXT，SASL_SSL 或 SSL。")])]),s._v(" "),t("tr",[t("td",[s._v("Other Kafka Consumer Properties")]),s._v(" "),t("td",[s._v("–")]),s._v(" "),t("td",[s._v("这些属性用于配置 Kafka Consumer。 可以使用 Kafka 支持的任何消费者财产。 唯一的要求是在前缀为 “kafka.consumer” 的前缀中添加属性名称。 例如： "),t("code",[s._v("kafka.consumer.auto.offset.reset")])])])])]),s._v(" "),t("p",[s._v("Kafka source 覆盖了两个 Kafka 消费者参数：source 将 auto.commit.enable 设置为 “false”，以批次进行提交。Kafka source 保证至少一次消息检索策略。source 启动时可能会出现重复项。Kafka Source 还为 key.deserializer (org.apache.kafka.common.serialization.StringSerializer) 和 value.deserializer (org.apache.kafka.common.serialization.ByteArraySerializer) 提供了默认值。不建议修改这些参数。")]),s._v(" "),t("div",{staticClass:"language-properties line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#1 代表一个flume 给每个组件匿名")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("r1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.channels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("s1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置kafka")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("org.apache.flume.source.kafka.KafkaSource")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一批写入 Channel 的最大消息数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.batchSize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("5000")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将批次写入通道之前的最长时间（以毫秒为单位）只要达到第一个大小和时间，就会写入批次。（优化项）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.batchDurationMillis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("2000")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.kafka.bootstrap.servers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("192.168.81.101:9092")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.kafka.topics")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("flink_yx_produce,flink_yc_produce")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.kafka.consumer.group.id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("flume_consume_1")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定a1的channels基于内存")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.channels.c1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("memory")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定a1的sinks 输出到控制台")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks.s1.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("logger")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定a1 sources和channle 的关系")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sources.r1.channels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定a1 sinks 和 channel 的关系")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("a1.sinks.s1.channel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])]),t("p",[s._v("agent.sources.r1.batchSize = 5000; agent.sources.r1.batchDurationMillis = 2000，即每 2 秒钟拉取 kafka 一批数据，批数据大小为 5000 放入到 flume-channels 中 。这两个值总和考虑以下两项：")]),s._v(" "),t("ul",[t("li",[s._v("需要配置 kafka 单条数据 broker.conf 中配置 message.max.bytes")]),s._v(" "),t("li",[s._v("当前 flume channel sink 组件最大消费能力如何")])]),s._v(" "),t("blockquote",[t("p",[s._v("文档地址 https://github.com/apache/flume/blob/trunk/flume-ng-doc/sphinx/FlumeUserGuide.rst")])]),s._v(" "),t("h2",{attrs:{id:"taildir-source"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#taildir-source"}},[s._v("#")]),s._v(" Taildir Source")]),s._v(" "),t("p",[s._v("在日志收集服务器的某个目录下，会按照一段时间生成一个日志文件，并且日志会不断的追加到这个文件中，比如，每小时一个命名规则为 log_20151015_10.log 的日志文件，所有 10 点产生的日志都会追加到这个文件中，到了 11 点，就会生成另一个 log_20151015_11.log 的文件。")]),s._v(" "),t("p",[s._v("这种场景如果通过 flume（1.6）收集，当前提供的 Spooling Directory Source 和 Exec Source 均不能满足动态实时收集的需求，在当前正在开发的 flume1.7 版本中，提供了一个非常好用的 TaildirSource，使用这个 source，可以监控一个目录，并且使用正则表达式匹配该目录中的文件名进行实时收集。")]),s._v(" "),t("p",[s._v("Taildir Source 可实时监控一批文件，并记录每个文件最新消费位置，agent 进程重启后不会有重复消费的问题。")]),s._v(" "),t("div",{staticClass:"language-properties line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# source的名字")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.sources")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("s1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# channels的名字")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.channels")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sink的名字")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.sinks")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("r1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定source使用的channel")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.sources.s1.channels")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定sink使用的channel")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.sinks.r1.channel")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("c1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######## source相关配置 ########")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# source类型")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.sources.s1.type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("TAILDIR")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 元数据位置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.sources.s1.positionFile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("/Users/wangpei/tempData/flume/taildir_position.json")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 监控的目录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.sources.s1.filegroups")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("f1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.sources.s1.filegroups.f1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("/Users/wangpei/tempData/flume/data/.*log")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.sources.s1.fileHeader")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("true")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######## channel相关配置 ########")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# channel类型")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.channels.c1.type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据存放路径")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.channels.c1.dataDirs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("/Users/wangpei/tempData/flume/filechannle/dataDirs")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查点路径")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.channels.c1.checkpointDir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("/Users/wangpei/tempData/flume/filechannle/checkpointDir")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# channel中最多缓存多少")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.channels.c1.capacity")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("1000")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# channel一次最多吐给sink多少")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.channels.c1.transactionCapacity")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("100")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######## sink相关配置 ########")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sink类型")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.sinks.r1.type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("org.apache.flume.sink.kafka.KafkaSink")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# brokers地址")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.sinks.r1.kafka.bootstrap.servers")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("localhost:9092")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# topic")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.sinks.r1.kafka.topic")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("testTopic3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 压缩")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("agent.sinks.r1.kafka.producer.compression.type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("snappy")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br")])]),t("p",[s._v("当你修改文件名后，文件的所有内容会被重新加载到 flume")])])}),[],!1,null,null,null);a.default=e.exports}}]);